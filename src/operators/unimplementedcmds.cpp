#ifndef NO_COMMANDS
#include "../commandmap.h"
#include "../value.h"
#include "../cmd.h"
#include "../virtualmachine.h"

using namespace sqf;
void sqf::commandmap::initunimplemented()
{
	add(binary(4, "lnbsetcurselrow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcurselrow")); return {}; }));
	add(binary(4, "removemenuitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemenuitem")); return {}; }));
	add(binary(4, "curatorcoef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorcoef")); return {}; }));
	add(binary(4, "getreldir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getreldir")); return {}; }));
	add(binary(4, "menucollapse", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menucollapse")); return {}; }));
	add(binary(4, "ctrlsetfontheighth6", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth6")); return {}; }));
	add(binary(4, "findemptyposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "findemptyposition")); return {}; }));
	add(binary(4, "menusetdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetdata")); return {}; }));
	add(binary(4, "setwaypointtype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointtype")); return {}; }));
	add(binary(4, "lbsetcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcolor")); return {}; }));
	add(binary(4, "lbsetcolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcolorright")); return {}; }));
	add(binary(4, "say3d", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "say3d")); return {}; }));
	add(binary(4, "forceflagtexture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceflagtexture")); return {}; }));
	add(binary(4, "addvehicle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addvehicle")); return {}; }));
	add(binary(4, "enablereload", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablereload")); return {}; }));
	add(binary(4, "setpilotlight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpilotlight")); return {}; }));
	add(binary(4, "setvisibleiftreecollapsed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvisibleiftreecollapsed")); return {}; }));
	add(binary(4, "isequaltypeall", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isequaltypeall")); return {}; }));
	add(binary(4, "camconstuctionsetparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camconstuctionsetparams")); return {}; }));
	add(binary(4, "commandsuppressivefire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandsuppressivefire")); return {}; }));
	add(binary(4, "tvtext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvtext")); return {}; }));
	add(binary(4, "switchlight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchlight")); return {}; }));
	add(binary(4, "camsettarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsettarget")); return {}; }));
	add(binary(4, "setanimspeedcoef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setanimspeedcoef")); return {}; }));
	add(binary(4, "setposaslw", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposaslw")); return {}; }));
	add(binary(4, "camsetfocus", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetfocus")); return {}; }));
	add(binary(4, "ctrlsetfontp", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontp")); return {}; }));
	add(binary(4, "ctrlsetfont", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfont")); return {}; }));
	add(binary(4, "allowgetin", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowgetin")); return {}; }));
	add(binary(4, "ctrlsetfonth4b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth4b")); return {}; }));
	add(binary(4, "tvdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvdata")); return {}; }));
	add(binary(4, "setsimpletaskdescription", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletaskdescription")); return {}; }));
	add(binary(4, "sendtaskresult", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sendtaskresult")); return {}; }));
	add(binary(4, "directsay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "directsay")); return {}; }));
	add(binary(4, "ctrlsetforegroundcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetforegroundcolor")); return {}; }));
	add(binary(4, "setforcegeneratorrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setforcegeneratorrtd")); return {}; }));
	add(binary(4, "menusetvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetvalue")); return {}; }));
	add(binary(4, "worldtomodel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "worldtomodel")); return {}; }));
	add(binary(4, "sethitindex", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethitindex")); return {}; }));
	add(binary(4, "hideobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hideobject")); return {}; }));
	add(binary(4, "get3denattribute", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denattribute")); return {}; }));
	add(binary(4, "dofollow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dofollow")); return {}; }));
	add(binary(4, "disableconversation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableconversation")); return {}; }));
	add(binary(4, "camsetdive", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetdive")); return {}; }));
	add(binary(4, "tvsetselectcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetselectcolor")); return {}; }));
	add(binary(4, "setweaponreloadingtime", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setweaponreloadingtime")); return {}; }));
	add(binary(4, "enableai", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableai")); return {}; }));
	add(binary(4, "removemagazine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemagazine")); return {}; }));
	add(binary(4, "remotecontrol", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remotecontrol")); return {}; }));
	add(binary(4, "additem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additem")); return {}; }));
	add(binary(4, "addmpeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmpeventhandler")); return {}; }));
	add(binary(4, "actionparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionparams")); return {}; }));
	add(binary(4, "setfromeditor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfromeditor")); return {}; }));
	add(binary(4, "selectweaponturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectweaponturret")); return {}; }));
	add(binary(4, "menuurl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuurl")); return {}; }));
	add(binary(4, "getfriend", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getfriend")); return {}; }));
	add(binary(4, "deleteeditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deleteeditorobject")); return {}; }));
	add(binary(4, "registertask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "registertask")); return {}; }));
	add(binary(4, "synchronizeobjectsadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizeobjectsadd")); return {}; }));
	add(binary(4, "disabletiequipment", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disabletiequipment")); return {}; }));
	add(binary(4, "setparticlerandom", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setparticlerandom")); return {}; }));
	add(binary(4, "targetsquery", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "targetsquery")); return {}; }));
	add(binary(4, "lbsetselectcolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetselectcolorright")); return {}; }));
	add(binary(4, "animatepylon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animatepylon")); return {}; }));
	add(binary(4, "enableuavwaypoints", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableuavwaypoints")); return {}; }));
	add(binary(4, "distancesqr", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "distancesqr")); return {}; }));
	add(binary(4, "setspeaker", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setspeaker")); return {}; }));
	add(binary(4, "setammoonpylon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setammoonpylon")); return {}; }));
	add(binary(4, "setcustomweightrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcustomweightrtd")); return {}; }));
	add(binary(4, "isuavconnectable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isuavconnectable")); return {}; }));
	add(binary(4, "playaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playaction")); return {}; }));
	add(binary(4, "ctrlsetangle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetangle")); return {}; }));
	add(binary(4, "setsimpletasktype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletasktype")); return {}; }));
	add(binary(4, "triggerattachobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerattachobject")); return {}; }));
	add(binary(4, "animationsourcephase", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animationsourcephase")); return {}; }));
	add(binary(4, "lnbsetvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetvalue")); return {}; }));
	add(binary(4, "loadmagazine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadmagazine")); return {}; }));
	add(binary(4, "ctrlsetmodel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetmodel")); return {}; }));
	add(binary(4, "loadstatus", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadstatus")); return {}; }));
	add(binary(4, "removempeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removempeventhandler")); return {}; }));
	add(binary(4, "setlightbrightness", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightbrightness")); return {}; }));
	add(binary(4, "swimindepth", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "swimindepth")); return {}; }));
	add(binary(4, "attachobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attachobject")); return {}; }));
	add(binary(4, "addrating", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addrating")); return {}; }));
	add(binary(4, "nearobjectsready", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearobjectsready")); return {}; }));
	add(binary(4, "setwaypointposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointposition")); return {}; }));
	add(binary(4, "controlsgroupctrl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "controlsgroupctrl")); return {}; }));
	add(binary(4, "tvpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvpictureright")); return {}; }));
	add(binary(4, "ctrlsettooltipcolorshade", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettooltipcolorshade")); return {}; }));
	add(binary(4, "saveidentity", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "saveidentity")); return {}; }));
	add(binary(4, "enablestamina", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablestamina")); return {}; }));
	add(binary(4, "settype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settype")); return {}; }));
	add(binary(4, "setammo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setammo")); return {}; }));
	add(binary(4, "removeownedmine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeownedmine")); return {}; }));
	add(binary(4, "setunitability", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitability")); return {}; }));
	add(binary(4, "additemtouniform", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additemtouniform")); return {}; }));
	add(binary(4, "htmlload", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "htmlload")); return {}; }));
	add(binary(4, "setvehiclereceiveremotetargets", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclereceiveremotetargets")); return {}; }));
	add(binary(4, "enableweapondisassembly", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableweapondisassembly")); return {}; }));
	add(binary(4, "assignasgunner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignasgunner")); return {}; }));
	add(binary(4, "setunitrecoilcoefficient", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitrecoilcoefficient")); return {}; }));
	add(binary(4, "menuchecked", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuchecked")); return {}; }));
	add(binary(4, "sethitpointdamage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethitpointdamage")); return {}; }));
	add(binary(4, "allow3dmode", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allow3dmode")); return {}; }));
	add(binary(4, "limitspeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "limitspeed")); return {}; }));
	add(binary(4, "loadoverlay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadoverlay")); return {}; }));
	add(binary(4, "campreload", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreload")); return {}; }));
	add(binary(4, "removeitemfrombackpack", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeitemfrombackpack")); return {}; }));
	add(binary(4, "settriggertype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggertype")); return {}; }));
	add(binary(4, "ppeffectcommit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectcommit")); return {}; }));
	add(binary(4, "updatedrawicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "updatedrawicon")); return {}; }));
	add(binary(4, "setwinddir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwinddir")); return {}; }));
	add(binary(4, "ctrlremovealleventhandlers", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlremovealleventhandlers")); return {}; }));
	add(binary(4, "assignascargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignascargo")); return {}; }));
	add(binary(4, "setvehicleid", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicleid")); return {}; }));
	add(binary(4, "groupradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupradio")); return {}; }));
	add(binary(4, "slidersetrange", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetrange")); return {}; }));
	add(binary(4, "lnbsettext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsettext")); return {}; }));
	add(binary(4, "setfog", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfog")); return {}; }));
	add(binary(4, "setvectorup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvectorup")); return {}; }));
	add(binary(4, "setunittrait", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunittrait")); return {}; }));
	add(binary(4, "forcewalk", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcewalk")); return {}; }));
	add(binary(4, "addweaponcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponcargo")); return {}; }));
	add(binary(4, "addweaponcargoglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponcargoglobal")); return {}; }));
	add(binary(4, "tvsetpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpictureright")); return {}; }));
	add(binary(4, "setlightintensity", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightintensity")); return {}; }));
	add(binary(4, "customradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "customradio")); return {}; }));
	add(binary(4, "currentmagazinedetailturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentmagazinedetailturret")); return {}; }));
	add(binary(4, "settitleeffect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settitleeffect")); return {}; }));
	add(binary(4, "lnbsettextright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsettextright")); return {}; }));
	add(binary(4, "commandfollow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandfollow")); return {}; }));
	add(binary(4, "allowfileoperations", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowfileoperations")); return {}; }));
	add(binary(4, "lbsetpicturecolordisabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolordisabled")); return {}; }));
	add(binary(4, "setcurrentwaypoint", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcurrentwaypoint")); return {}; }));
	add(binary(4, "removeitemfromuniform", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeitemfromuniform")); return {}; }));
	add(binary(4, "vectormodeltoworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectormodeltoworld")); return {}; }));
	add(binary(4, "setlightnings", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightnings")); return {}; }));
	add(binary(4, "lnbsortbyvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsortbyvalue")); return {}; }));
	add(binary(4, "tvsetpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicture")); return {}; }));
	add(binary(4, "lnbsetdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetdata")); return {}; }));
	add(binary(4, "setpylonloadout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpylonloadout")); return {}; }));
	add(binary(4, "removeprimaryweaponitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeprimaryweaponitem")); return {}; }));
	add(binary(4, "selecteditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selecteditorobject")); return {}; }));
	add(binary(4, "setobjectarguments", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjectarguments")); return {}; }));
	add(binary(4, "setflagtexture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setflagtexture")); return {}; }));
	add(binary(4, "removeitemfromvest", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeitemfromvest")); return {}; }));
	add(binary(4, "gethitindex", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gethitindex")); return {}; }));
	add(binary(4, "forcefollowroad", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcefollowroad")); return {}; }));
	add(binary(4, "removeaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeaction")); return {}; }));
	add(binary(4, "addplayerscores", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addplayerscores")); return {}; }));
	add(binary(4, "setposworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposworld")); return {}; }));
	add(binary(4, "creatediarysubject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "creatediarysubject")); return {}; }));
	add(binary(4, "knowsabout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "knowsabout")); return {}; }));
	add(binary(4, "sendtask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sendtask")); return {}; }));
	add(binary(4, "in", type::ARRAY, type::LOCATION, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "in")); return {}; }));
	add(binary(4, "lnbsetpicturecolorselectedright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorselectedright")); return {}; }));
	add(binary(4, "enablepersonturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablepersonturret")); return {}; }));
	add(binary(4, "ctsetvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctsetvalue")); return {}; }));
	add(binary(4, "setwaypointscript", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointscript")); return {}; }));
	add(binary(4, "lbsetvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetvalue")); return {}; }));
	add(binary(4, "playmove", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playmove")); return {}; }));
	add(binary(4, "currentweaponturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentweaponturret")); return {}; }));
	add(binary(4, "ammoonpylon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ammoonpylon")); return {}; }));
	add(binary(4, "ctrlsetfontpb", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontpb")); return {}; }));
	add(binary(4, "lockcamerato", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockcamerato")); return {}; }));
	add(binary(4, "commandradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandradio")); return {}; }));
	add(binary(4, "removeweaponturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeweaponturret")); return {}; }));
	add(binary(4, "cutfadeout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cutfadeout")); return {}; }));
	add(binary(4, "removeallmpeventhandlers", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallmpeventhandlers")); return {}; }));
	add(binary(4, "inpolygon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inpolygon")); return {}; }));
	add(binary(4, "tvsettext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsettext")); return {}; }));
	add(binary(4, "set3denobjecttype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denobjecttype")); return {}; }));
	add(binary(4, "triggerdynamicsimulation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerdynamicsimulation")); return {}; }));
	add(binary(4, "addmagazinecargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazinecargo")); return {}; }));
	add(binary(4, "addmagazinecargoglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazinecargoglobal")); return {}; }));
	add(binary(4, "minedetectedby", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "minedetectedby")); return {}; }));
	add(binary(4, "lnbtext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbtext")); return {}; }));
	add(binary(4, "isvehiclesensorenabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isvehiclesensorenabled")); return {}; }));
	add(binary(4, "tvsetdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetdata")); return {}; }));
	add(binary(4, "ctrlsetbackgroundcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetbackgroundcolor")); return {}; }));
	add(binary(4, "canadditemtobackpack", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canadditemtobackpack")); return {}; }));
	add(binary(4, "setposasl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposasl")); return {}; }));
	add(binary(4, "reveal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "reveal")); return {}; }));
	add(binary(4, "lbsettooltip", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsettooltip")); return {}; }));
	add(binary(4, "vehicleradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vehicleradio")); return {}; }));
	add(binary(4, "show3dicons", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "show3dicons")); return {}; }));
	add(binary(4, "ctrlsetdisabledcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetdisabledcolor")); return {}; }));
	add(binary(4, "enablevehiclecargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablevehiclecargo")); return {}; }));
	add(binary(4, "lnbdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdata")); return {}; }));
	add(binary(4, "lbadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbadd")); return {}; }));
	add(binary(4, "get3denmissionattribute", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denmissionattribute")); return {}; }));
	add(binary(4, "isflashlighton", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isflashlighton")); return {}; }));
	add(binary(4, "execfsm", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "execfsm")); return {}; }));
	add(binary(4, "setcollisionlight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcollisionlight")); return {}; }));
	add(binary(4, "setvectordir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvectordir")); return {}; }));
	add(binary(4, "setobjectmaterialglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjectmaterialglobal")); return {}; }));
	add(binary(4, "setdropinterval", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdropinterval")); return {}; }));
	add(binary(4, "ctrlsettooltipcolortext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettooltipcolortext")); return {}; }));
	add(binary(4, "lbtext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbtext")); return {}; }));
	add(binary(4, "switchmove", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchmove")); return {}; }));
	add(binary(4, "additemcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additemcargo")); return {}; }));
	add(binary(4, "neartargets", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "neartargets")); return {}; }));
	add(binary(4, "addgoggles", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addgoggles")); return {}; }));
	add(binary(4, "lbpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbpicture")); return {}; }));
	add(binary(4, "tvsetpicturecolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturecolor")); return {}; }));
	add(binary(4, "allowcuratorlogicignoreareas", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowcuratorlogicignoreareas")); return {}; }));
	add(binary(4, "assignascommander", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignascommander")); return {}; }));
	add(binary(4, "showwaypoint", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showwaypoint")); return {}; }));
	add(binary(4, "getdir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdir")); return {}; }));
	add(binary(4, "lbsettextright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsettextright")); return {}; }));
	add(binary(4, "ctrlremoveeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlremoveeventhandler")); return {}; }));
	add(binary(4, "addmagazine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazine")); return {}; }));
	add(binary(4, "disablenvgequipment", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disablenvgequipment")); return {}; }));
	add(binary(4, "targetknowledge", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "targetknowledge")); return {}; }));
	add(binary(4, "lbdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbdata")); return {}; }));
	add(binary(4, "lbdelete", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbdelete")); return {}; }));
	add(binary(4, "campreparefov", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparefov")); return {}; }));
	add(binary(4, "newoverlay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "newoverlay")); return {}; }));
	add(binary(4, "respawnvehicle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "respawnvehicle")); return {}; }));
	add(binary(4, "camsetfov", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetfov")); return {}; }));
	add(binary(4, "cutobj", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cutobj")); return {}; }));
	add(binary(4, "setsimpletaskalwaysvisible", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletaskalwaysvisible")); return {}; }));
	add(binary(4, "turretunit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "turretunit")); return {}; }));
	add(binary(4, "kbaddtopic", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbaddtopic")); return {}; }));
	add(binary(4, "setposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposition")); return {}; }));
	add(binary(4, "setformationtask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setformationtask")); return {}; }));
	add(binary(4, "campreparebank", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparebank")); return {}; }));
	add(binary(4, "setcurrenttask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcurrenttask")); return {}; }));
	add(binary(4, "cbsetchecked", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cbsetchecked")); return {}; }));
	add(binary(4, "tvsort", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsort")); return {}; }));
	add(binary(4, "setuseractiontext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setuseractiontext")); return {}; }));
	add(binary(4, "setsuppression", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsuppression")); return {}; }));
	add(binary(4, "lbsetpicturerightcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturerightcolor")); return {}; }));
	add(binary(4, "weaponsturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponsturret")); return {}; }));
	add(binary(4, "removeitems", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeitems")); return {}; }));
	add(binary(4, "radiochannelsetcallsign", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiochannelsetcallsign")); return {}; }));
	add(binary(4, "ctrlsetchecked", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetchecked")); return {}; }));
	add(binary(4, "setgroupid", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupid")); return {}; }));
	add(binary(4, "moveto", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveto")); return {}; }));
	add(binary(4, "tvexpand", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvexpand")); return {}; }));
	add(binary(4, "vectorworldtomodelvisual", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectorworldtomodelvisual")); return {}; }));
	add(binary(4, "tvadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvadd")); return {}; }));
	add(binary(4, "moveinturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveinturret")); return {}; }));
	add(binary(4, "kbadddatabase", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbadddatabase")); return {}; }));
	add(binary(4, "infopanelcomponentenabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "infopanelcomponentenabled")); return {}; }));
	add(binary(4, "create3denentity", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "create3denentity")); return {}; }));
	add(binary(4, "lbsetpicturerightcolorselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturerightcolorselected")); return {}; }));
	add(binary(4, "deleteresources", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deleteresources")); return {}; }));
	add(binary(4, "ropedetach", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropedetach")); return {}; }));
	add(binary(4, "enablesimulationglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablesimulationglobal")); return {}; }));
	add(binary(4, "ctrlsetfonth1b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth1b")); return {}; }));
	add(binary(4, "setwantedrpmrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwantedrpmrtd")); return {}; }));
	add(binary(4, "tvcount", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcount")); return {}; }));
	add(binary(4, "unregistertask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unregistertask")); return {}; }));
	add(binary(4, "camcreate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camcreate")); return {}; }));
	add(binary(4, "say", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "say")); return {}; }));
	add(binary(4, "ctrlsetscale", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetscale")); return {}; }));
	add(binary(4, "ppeffectenable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectenable")); return {}; }));
	add(binary(4, "intersect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "intersect")); return {}; }));
	add(binary(4, "removehandgunitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removehandgunitem")); return {}; }));
	add(binary(4, "dofire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dofire")); return {}; }));
	add(binary(4, "set3denattribute", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denattribute")); return {}; }));
	add(binary(4, "lbsetselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetselected")); return {}; }));
	add(binary(4, "setdebriefingtext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdebriefingtext")); return {}; }));
	add(binary(4, "ctrlsetfade", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfade")); return {}; }));
	add(binary(4, "hcgroupparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcgroupparams")); return {}; }));
	add(binary(4, "sideradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sideradio")); return {}; }));
	add(binary(4, "countenemy", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "countenemy")); return {}; }));
	add(binary(4, "progresssetposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "progresssetposition")); return {}; }));
	add(binary(4, "setdammage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdammage")); return {}; }));
	add(binary(4, "moveinany", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveinany")); return {}; }));
	add(binary(4, "lnbdeletecolumn", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdeletecolumn")); return {}; }));
	add(binary(4, "displayaddeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayaddeventhandler")); return {}; }));
	add(binary(4, "ctrlsettooltip", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettooltip")); return {}; }));
	add(binary(4, "camcommit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camcommit")); return {}; }));
	add(binary(4, "setshotparents", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setshotparents")); return {}; }));
	add(binary(4, "modeltoworldvisual", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "modeltoworldvisual")); return {}; }));
	add(binary(4, "setattributes", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setattributes")); return {}; }));
	add(binary(4, "getgroupicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getgroupicon")); return {}; }));
	add(binary(4, "tvdelete", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvdelete")); return {}; }));
	add(binary(4, "ctrlsetfonth5b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth5b")); return {}; }));
	add(binary(4, "enableaifeature", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableaifeature")); return {}; }));
	add(binary(4, "addmenuitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmenuitem")); return {}; }));
	add(binary(4, "enablesimulation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablesimulation")); return {}; }));
	add(binary(4, "allowdamage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowdamage")); return {}; }));
	add(binary(4, "setlightcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightcolor")); return {}; }));
	add(binary(4, "setwaypointhouseposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointhouseposition")); return {}; }));
	add(binary(4, "setfriend", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfriend")); return {}; }));
	add(binary(4, "addcuratoreditingarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcuratoreditingarea")); return {}; }));
	add(binary(4, "attachto", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attachto")); return {}; }));
	add(binary(4, "cutrsc", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cutrsc")); return {}; }));
	add(binary(4, "setcaptive", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcaptive")); return {}; }));
	add(binary(4, "editorseteventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "editorseteventhandler")); return {}; }));
	add(binary(4, "radiochannelsetlabel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiochannelsetlabel")); return {}; }));
	add(binary(4, "lockedcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockedcargo")); return {}; }));
	add(binary(4, "turretlocal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "turretlocal")); return {}; }));
	add(binary(4, "setgroupidglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupidglobal")); return {}; }));
	add(binary(4, "kbtell", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbtell")); return {}; }));
	add(binary(4, "setidentity", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setidentity")); return {}; }));
	add(binary(4, "menuenabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuenabled")); return {}; }));
	add(binary(4, "doorphase", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "doorphase")); return {}; }));
	add(binary(4, "lookat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lookat")); return {}; }));
	add(binary(4, "selectleader", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectleader")); return {}; }));
	add(binary(4, "backpackspacefor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpackspacefor")); return {}; }));
	add(binary(4, "animatesource", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animatesource")); return {}; }));
	add(binary(4, "drawicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawicon")); return {}; }));
	add(binary(4, "setunitloadout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitloadout")); return {}; }));
	add(binary(4, "ctdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctdata")); return {}; }));
	add(binary(4, "removecuratoraddons", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removecuratoraddons")); return {}; }));
	add(binary(4, "playgesture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playgesture")); return {}; }));
	add(binary(4, "campreparetarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparetarget")); return {}; }));
	add(binary(4, "ctsetheadertemplate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctsetheadertemplate")); return {}; }));
	add(binary(4, "setvehiclereportownposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclereportownposition")); return {}; }));
	add(binary(4, "animationphase", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animationphase")); return {}; }));
	add(binary(4, "lockturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockturret")); return {}; }));
	add(binary(4, "remoteexec", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remoteexec")); return {}; }));
	add(binary(4, "removeweaponglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeweaponglobal")); return {}; }));
	add(binary(4, "createsite", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createsite")); return {}; }));
	add(binary(4, "setrainbow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrainbow")); return {}; }));
	add(binary(4, "setfatigue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfatigue")); return {}; }));
	add(binary(4, "addmagazineturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazineturret")); return {}; }));
	add(binary(4, "countside", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "countside")); return {}; }));
	add(binary(4, "ctfindrowheader", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctfindrowheader")); return {}; }));
	add(binary(4, "setparticleparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setparticleparams")); return {}; }));
	add(binary(4, "drawrectangle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawrectangle")); return {}; }));
	add(binary(4, "lnbaddrow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbaddrow")); return {}; }));
	add(binary(4, "tvsetpicturecolorselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturecolorselected")); return {}; }));
	add(binary(4, "drawline", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawline")); return {}; }));
	add(binary(4, "posscreentoworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "posscreentoworld")); return {}; }));
	add(binary(4, "sethidebehind", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethidebehind")); return {}; }));
	add(binary(4, "turretowner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "turretowner")); return {}; }));
	add(binary(4, "setface", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setface")); return {}; }));
	add(binary(4, "fadesound", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fadesound")); return {}; }));
	add(binary(4, "setwaypointformation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointformation")); return {}; }));
	add(binary(4, "disableuavconnectability", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableuavconnectability")); return {}; }));
	add(binary(4, "nearroads", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearroads")); return {}; }));
	add(binary(4, "displayctrl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayctrl")); return {}; }));
	add(binary(4, "set3denmissionattribute", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denmissionattribute")); return {}; }));
	add(binary(4, "setformdir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setformdir")); return {}; }));
	add(binary(4, "ctrlsetfontsecondary", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontsecondary")); return {}; }));
	add(binary(4, "lockcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockcargo")); return {}; }));
	add(binary(4, "camcommitprepared", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camcommitprepared")); return {}; }));
	add(binary(4, "setnamesound", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setnamesound")); return {}; }));
	add(binary(4, "modeltoworldvisualworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "modeltoworldvisualworld")); return {}; }));
	add(binary(4, "doartilleryfire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "doartilleryfire")); return {}; }));
	add(binary(4, "isuniformallowed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isuniformallowed")); return {}; }));
	add(binary(4, "skill", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "skill")); return {}; }));
	add(binary(4, "creatediaryrecord", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "creatediaryrecord")); return {}; }));
	add(binary(4, "addweapon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweapon")); return {}; }));
	add(binary(4, "waypointattachvehicle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointattachvehicle")); return {}; }));
	add(binary(4, "lockwp", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockwp")); return {}; }));
	add(binary(4, "addmagazineammocargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazineammocargo")); return {}; }));
	add(binary(4, "displayseteventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayseteventhandler")); return {}; }));
	add(binary(4, "addmagazineglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazineglobal")); return {}; }));
	add(binary(4, "setunitposweak", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitposweak")); return {}; }));
	add(binary(4, "ctrlsettextcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettextcolor")); return {}; }));
	add(binary(4, "addlivestats", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addlivestats")); return {}; }));
	add(binary(4, "forceadduniform", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceadduniform")); return {}; }));
	add(binary(4, "canvehiclecargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canvehiclecargo")); return {}; }));
	add(binary(4, "removeitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeitem")); return {}; }));
	add(binary(4, "vectorworldtomodel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectorworldtomodel")); return {}; }));
	add(binary(4, "setrandomlip", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrandomlip")); return {}; }));
	add(binary(4, "setwppos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwppos")); return {}; }));
	add(binary(4, "findeditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "findeditorobject")); return {}; }));
	add(binary(4, "addforce", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addforce")); return {}; }));
	add(binary(4, "lockedturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockedturret")); return {}; }));
	add(binary(4, "lbpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbpictureright")); return {}; }));
	add(binary(4, "ctsetdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctsetdata")); return {}; }));
	add(binary(4, "ctrlmapcursor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapcursor")); return {}; }));
	add(binary(4, "drawlink", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawlink")); return {}; }));
	add(binary(4, "addcuratorpoints", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcuratorpoints")); return {}; }));
	add(binary(4, "assignasturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignasturret")); return {}; }));
	add(binary(4, "sendsimplecommand", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sendsimplecommand")); return {}; }));
	add(binary(4, "lnbsort", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsort")); return {}; }));
	add(binary(4, "ctrlsetposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetposition")); return {}; }));
	add(binary(4, "removecuratoreditingarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removecuratoreditingarea")); return {}; }));
	add(binary(4, "setwaypointspeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointspeed")); return {}; }));
	add(binary(4, "setdynamicsimulationdistance", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdynamicsimulationdistance")); return {}; }));
	add(binary(4, "setcuratorcameraareaceiling", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcuratorcameraareaceiling")); return {}; }));
	add(binary(4, "addtorque", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addtorque")); return {}; }));
	add(binary(4, "onmapsingleclick", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onmapsingleclick")); return {}; }));
	add(binary(4, "setmass", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmass")); return {}; }));
	add(binary(4, "kbadddatabasetargets", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbadddatabasetargets")); return {}; }));
	add(binary(4, "posworldtoscreen", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "posworldtoscreen")); return {}; }));
	add(binary(4, "selectionposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectionposition")); return {}; }));
	add(binary(4, "updatemenuitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "updatemenuitem")); return {}; }));
	add(binary(4, "addweaponturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponturret")); return {}; }));
	add(binary(4, "setwindforce", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwindforce")); return {}; }));
	add(binary(4, "getfsmvariable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getfsmvariable")); return {}; }));
	add(binary(4, "addresources", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addresources")); return {}; }));
	add(binary(4, "addaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addaction")); return {}; }));
	add(binary(4, "setsimpletaskcustomdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletaskcustomdata")); return {}; }));
	add(binary(4, "drawpolygon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawpolygon")); return {}; }));
	add(binary(4, "menushortcut", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menushortcut")); return {}; }));
	add(binary(4, "camsetrelpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetrelpos")); return {}; }));
	add(binary(4, "ctrlcreate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlcreate")); return {}; }));
	add(binary(4, "useaudiotimeformoves", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "useaudiotimeformoves")); return {}; }));
	add(binary(4, "addscore", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addscore")); return {}; }));
	add(binary(4, "enablevehiclesensor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablevehiclesensor")); return {}; }));
	add(binary(4, "assigncurator", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assigncurator")); return {}; }));
	add(binary(4, "buildingexit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buildingexit")); return {}; }));
	add(binary(4, "setfuel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfuel")); return {}; }));
	add(binary(4, "ppeffectadjust", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectadjust")); return {}; }));
	add(binary(4, "magazineturretammo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazineturretammo")); return {}; }));
	add(binary(4, "nmenuitems", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nmenuitems")); return {}; }));
	add(binary(4, "preloadobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "preloadobject")); return {}; }));
	add(binary(4, "ctrlsetmodeldirandup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetmodeldirandup")); return {}; }));
	add(binary(4, "lnbpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbpictureright")); return {}; }));
	add(binary(4, "setwaypointcombatmode", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointcombatmode")); return {}; }));
	add(binary(4, "flyinheightasl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flyinheightasl")); return {}; }));
	add(binary(4, "creatempcampaigndisplay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "creatempcampaigndisplay")); return {}; }));
	add(binary(4, "enabledynamicsimulation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enabledynamicsimulation")); return {}; }));
	add(binary(4, "setposatl", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposatl")); return {}; }));
	add(binary(4, "setdrawicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdrawicon")); return {}; }));
	add(binary(4, "globalradio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "globalradio")); return {}; }));
	add(binary(4, "seteditormode", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "seteditormode")); return {}; }));
	add(binary(4, "tvtooltip", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvtooltip")); return {}; }));
	add(binary(4, "ctrlsettext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettext")); return {}; }));
	add(binary(4, "sidechat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sidechat")); return {}; }));
	add(binary(4, "enableuavconnectability", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableuavconnectability")); return {}; }));
	add(binary(4, "addweaponglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponglobal")); return {}; }));
	add(binary(4, "ctrlcommit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlcommit")); return {}; }));
	add(binary(4, "nearestobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestobject")); return {}; }));
	add(binary(4, "setlightdaylight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightdaylight")); return {}; }));
	add(binary(4, "lightattachobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lightattachobject")); return {}; }));
	add(binary(4, "setcenterofmass", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcenterofmass")); return {}; }));
	add(binary(4, "hcsetgroup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcsetgroup")); return {}; }));
	add(binary(4, "setairportside", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setairportside")); return {}; }));
	add(binary(4, "setunitrank", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitrank")); return {}; }));
	add(binary(4, "setobjecttextureglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjecttextureglobal")); return {}; }));
	add(binary(4, "getrelpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getrelpos")); return {}; }));
	add(binary(4, "setsimpletasktarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletasktarget")); return {}; }));
	add(binary(4, "synchronizewaypoint", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizewaypoint")); return {}; }));
	add(binary(4, "lbsettext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsettext")); return {}; }));
	add(binary(4, "lnbdeleterow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdeleterow")); return {}; }));
	add(binary(4, "nearsupplies", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearsupplies")); return {}; }));
	add(binary(4, "copywaypoints", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "copywaypoints")); return {}; }));
	add(binary(4, "setleader", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setleader")); return {}; }));
	add(binary(4, "tvvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvvalue")); return {}; }));
	add(binary(4, "unitsbelowheight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitsbelowheight")); return {}; }));
	add(binary(4, "disableai", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableai")); return {}; }));
	add(binary(4, "setdirection", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdirection")); return {}; }));
	add(binary(4, "servercommand", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servercommand")); return {}; }));
	add(binary(4, "settriggertimeout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggertimeout")); return {}; }));
	add(binary(4, "lbisselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbisselected")); return {}; }));
	add(binary(4, "campreparedir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparedir")); return {}; }));
	add(binary(4, "lbsetdata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetdata")); return {}; }));
	add(binary(4, "camsetdir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetdir")); return {}; }));
	add(binary(4, "setposasl2", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setposasl2")); return {}; }));
	add(binary(4, "camsetbank", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetbank")); return {}; }));
	add(binary(4, "action", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "action")); return {}; }));
	add(binary(4, "removemagazineturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemagazineturret")); return {}; }));
	add(binary(4, "selectweapon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectweapon")); return {}; }));
	add(binary(4, "createtask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createtask")); return {}; }));
	add(binary(4, "addeditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addeditorobject")); return {}; }));
	add(binary(4, "enableinfopanelcomponent", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableinfopanelcomponent")); return {}; }));
	add(binary(4, "linkitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "linkitem")); return {}; }));
	add(binary(4, "seteditorobjectscope", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "seteditorobjectscope")); return {}; }));
	add(binary(4, "tvsetpicturecolordisabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturecolordisabled")); return {}; }));
	add(binary(4, "showlegend", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showlegend")); return {}; }));
	add(binary(4, "setdir", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdir")); return {}; }));
	add(binary(4, "setobjectproxy", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjectproxy")); return {}; }));
	add(binary(4, "ordergetin", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ordergetin")); return {}; }));
	add(binary(4, "ctremoverows", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctremoverows")); return {}; }));
	add(binary(4, "getunittrait", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getunittrait")); return {}; }));
	add(binary(4, "hcremovegroup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcremovegroup")); return {}; }));
	add(binary(4, "lbsetpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpictureright")); return {}; }));
	add(binary(4, "menusize", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusize")); return {}; }));
	add(binary(4, "issensortargetconfirmed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "issensortargetconfirmed")); return {}; }));
	add(binary(4, "usermfdvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setusermfdvalue")); return {}; }));
	add(binary(4, "getsoundcontroller", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getsoundcontroller")); return {}; }));
	add(binary(4, "enablemimics", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablemimics")); return {}; }));
	add(binary(4, "ctrlsetfonth2b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth2b")); return {}; }));
	add(binary(4, "setcustomaimcoef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcustomaimcoef")); return {}; }));
	add(binary(4, "setairplanethrottle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setairplanethrottle")); return {}; }));
	add(binary(4, "setsize", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsize")); return {}; }));
	add(binary(4, "setunitpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunitpos")); return {}; }));
	add(binary(4, "animatedoor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animatedoor")); return {}; }));
	add(binary(4, "isequaltypeparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isequaltypeparams")); return {}; }));
	add(binary(4, "ctfindheaderrows", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctfindheaderrows")); return {}; }));
	add(binary(4, "gethit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gethit")); return {}; }));
	add(binary(4, "drawarrow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawarrow")); return {}; }));
	add(binary(4, "setvehicleposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicleposition")); return {}; }));
	add(binary(4, "ctrlshow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlshow")); return {}; }));
	add(binary(4, "removemagazineglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemagazineglobal")); return {}; }));
	add(binary(4, "setlightflaremaxdistance", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightflaremaxdistance")); return {}; }));
	add(binary(4, "playmovenow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playmovenow")); return {}; }));
	add(binary(4, "commandfire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandfire")); return {}; }));
	add(binary(4, "forcespeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcespeed")); return {}; }));
	add(binary(4, "lbsetpicturerightcolordisabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturerightcolordisabled")); return {}; }));
	add(binary(4, "setvelocitytransformation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvelocitytransformation")); return {}; }));
	add(binary(4, "enablecollisionwith", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablecollisionwith")); return {}; }));
	add(binary(4, "displayremoveeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayremoveeventhandler")); return {}; }));
	add(binary(4, "addmagazines", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazines")); return {}; }));
	add(binary(4, "menuaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuaction")); return {}; }));
	add(binary(4, "deletegroupwhenempty", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletegroupwhenempty")); return {}; }));
	add(binary(4, "isflatempty", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isflatempty")); return {}; }));
	add(binary(4, "ctrlsetstructuredtext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetstructuredtext")); return {}; }));
	add(binary(4, "addteammember", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addteammember")); return {}; }));
	add(binary(4, "revealmine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "revealmine")); return {}; }));
	add(binary(4, "reportremotetarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "reportremotetarget")); return {}; }));
	add(binary(4, "setmusiceffect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmusiceffect")); return {}; }));
	add(binary(4, "switchgesture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchgesture")); return {}; }));
	add(binary(4, "setformation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setformation")); return {}; }));
	add(binary(4, "commandwatch", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandwatch")); return {}; }));
	add(binary(4, "lbcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbcolor")); return {}; }));
	add(binary(4, "targets", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "targets")); return {}; }));
	add(binary(4, "addcuratorcameraarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcuratorcameraarea")); return {}; }));
	add(binary(4, "ctrlsetfonth6b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth6b")); return {}; }));
	add(binary(4, "setpilotcamerarotation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpilotcamerarotation")); return {}; }));
	add(binary(4, "fire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fire")); return {}; }));
	add(binary(4, "setautonomous", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setautonomous")); return {}; }));
	add(binary(4, "getsoundcontrollerresult", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getsoundcontrollerresult")); return {}; }));
	add(binary(4, "ctvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctvalue")); return {}; }));
	add(binary(4, "hasweapon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hasweapon")); return {}; }));
	add(binary(4, "ctrlsettextsecondary", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettextsecondary")); return {}; }));
	add(binary(4, "setvehicletipars", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicletipars")); return {}; }));
	add(binary(4, "setflagside", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setflagside")); return {}; }));
	add(binary(4, "ctrowcontrols", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrowcontrols")); return {}; }));
	add(binary(4, "setspeedmode", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setspeedmode")); return {}; }));
	add(binary(4, "removeeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeeventhandler")); return {}; }));
	add(binary(4, "waypointattachobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointattachobject")); return {}; }));
	add(binary(4, "joinsilent", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "joinsilent")); return {}; }));
	add(binary(4, "tvsortbyvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsortbyvalue")); return {}; }));
	add(binary(4, "deletevehiclecrew", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletevehiclecrew")); return {}; }));
	add(binary(4, "ctrlsetautoscrollrewind", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetautoscrollrewind")); return {}; }));
	add(binary(4, "lbsetpicturecolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolor")); return {}; }));
	add(binary(4, "buildingpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buildingpos")); return {}; }));
	add(binary(4, "setwaypointstatements", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointstatements")); return {}; }));
	add(binary(4, "setwaypointforcebehaviour", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointforcebehaviour")); return {}; }));
	add(binary(4, "setmimic", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmimic")); return {}; }));
	add(binary(4, "engineon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "engineon")); return {}; }));
	add(binary(4, "setwindstr", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwindstr")); return {}; }));
	add(binary(4, "lbtextright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbtextright")); return {}; }));
	add(binary(4, "allowsprint", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowsprint")); return {}; }));
	add(binary(4, "additemtobackpack", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additemtobackpack")); return {}; }));
	add(binary(4, "ctrlsetautoscrollspeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetautoscrollspeed")); return {}; }));
	add(binary(4, "hideselection", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hideselection")); return {}; }));
	add(binary(4, "removedrawlinks", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removedrawlinks")); return {}; }));
	add(binary(4, "setwaypointcompletionradius", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointcompletionradius")); return {}; }));
	add(binary(4, "setgroupiconparams", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupiconparams")); return {}; }));
	add(binary(4, "lbcolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbcolorright")); return {}; }));
	add(binary(4, "setcuratoreditingareatype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcuratoreditingareatype")); return {}; }));
	add(binary(4, "confirmsensortarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "confirmsensortarget")); return {}; }));
	add(binary(4, "forceweaponfire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceweaponfire")); return {}; }));
	add(binary(4, "setlightambient", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightambient")); return {}; }));
	add(binary(4, "removesimpletask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removesimpletask")); return {}; }));
	add(binary(4, "setdestination", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdestination")); return {}; }));
	add(binary(4, "menupicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menupicture")); return {}; }));
	add(binary(4, "ctrlenable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlenable")); return {}; }));
	add(binary(4, "groupchat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupchat")); return {}; }));
	add(binary(4, "setrain", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrain")); return {}; }));
	add(binary(4, "add3denlayer", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "add3denlayer")); return {}; }));
	add(binary(4, "getspeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getspeed")); return {}; }));
	add(binary(4, "addweaponitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponitem")); return {}; }));
	add(binary(4, "cuttext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cuttext")); return {}; }));
	add(binary(4, "settaskstate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settaskstate")); return {}; }));
	add(binary(4, "triggerattachvehicle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerattachvehicle")); return {}; }));
	add(binary(4, "setcamuseti", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcamuseti")); return {}; }));
	add(binary(4, "addcuratoraddons", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcuratoraddons")); return {}; }));
	add(binary(4, "addbackpackcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addbackpackcargo")); return {}; }));
	add(binary(4, "join", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "join")); return {}; }));
	add(binary(4, "glanceat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "glanceat")); return {}; }));
	add(binary(4, "displayremovealleventhandlers", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayremovealleventhandlers")); return {}; }));
	add(binary(4, "ctrlmapscreentoworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapscreentoworld")); return {}; }));
	add(binary(4, "setwaypointname", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointname")); return {}; }));
	add(binary(4, "canadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canadd")); return {}; }));
	add(binary(4, "counttype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "counttype")); return {}; }));
	add(binary(4, "moveobjecttoend", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveobjecttoend")); return {}; }));
	add(binary(4, "removemagazinesturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemagazinesturret")); return {}; }));
	add(binary(4, "tvsetcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetcolor")); return {}; }));
	add(binary(4, "setrectangular", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrectangular")); return {}; }));
	add(binary(4, "menuenable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuenable")); return {}; }));
	add(binary(4, "ctheadercontrols", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctheadercontrols")); return {}; }));
	add(binary(4, "suppressfor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "suppressfor")); return {}; }));
	add(binary(4, "ctrlsettextcolorsecondary", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettextcolorsecondary")); return {}; }));
	add(binary(4, "inserteditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inserteditorobject")); return {}; }));
	add(binary(4, "set3denlogictype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denlogictype")); return {}; }));
	add(binary(4, "setdynamicsimulationdistancecoef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdynamicsimulationdistancecoef")); return {}; }));
	add(binary(4, "fadespeech", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fadespeech")); return {}; }));
	add(binary(4, "setpylonspriority", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpylonspriority")); return {}; }));
	add(binary(4, "closedisplay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "closedisplay")); return {}; }));
	add(binary(4, "menuvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuvalue")); return {}; }));
	add(binary(4, "settaskresult", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settaskresult")); return {}; }));
	add(binary(4, "setlightuseflare", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightuseflare")); return {}; }));
	add(binary(4, "breakout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "breakout")); return {}; }));
	add(binary(4, "isequaltypeany", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isequaltypeany")); return {}; }));
	add(binary(4, "drawtriangle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawtriangle")); return {}; }));
	add(binary(4, "lbsetselectcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetselectcolor")); return {}; }));
	add(binary(4, "mapcenteroncamera", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapcenteroncamera")); return {}; }));
	add(binary(4, "lbsetpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicture")); return {}; }));
	add(binary(4, "setammocargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setammocargo")); return {}; }));
	add(binary(4, "addbackpackcargoglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addbackpackcargoglobal")); return {}; }));
	add(binary(4, "createsimpletask", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createsimpletask")); return {}; }));
	add(binary(4, "commandfsm", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandfsm")); return {}; }));
	add(binary(4, "setcamerainterest", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcamerainterest")); return {}; }));
	add(binary(4, "switchaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchaction")); return {}; }));
	add(binary(4, "animate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animate")); return {}; }));
	add(binary(4, "setcuratorwaypointcost", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcuratorwaypointcost")); return {}; }));
	add(binary(4, "diarysubjectexists", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diarysubjectexists")); return {}; }));
	add(binary(4, "selectrandomweighted", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectrandomweighted")); return {}; }));
	add(binary(4, "setslingload", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setslingload")); return {}; }));
	add(binary(4, "random", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "random")); return {}; }));
	add(binary(4, "ctrlsetfontheight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheight")); return {}; }));
	add(binary(4, "ctrlchecked", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlchecked")); return {}; }));
	add(binary(4, "tvsettooltip", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsettooltip")); return {}; }));
	add(binary(4, "setfaceanimation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfaceanimation")); return {}; }));
	add(binary(4, "setflaganimationphase", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setflaganimationphase")); return {}; }));
	add(binary(4, "addhandgunitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addhandgunitem")); return {}; }));
	add(binary(4, "setwaypointloiterradius", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointloiterradius")); return {}; }));
	add(binary(4, "setpipeffect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpipeffect")); return {}; }));
	add(binary(4, "playactionnow", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playactionnow")); return {}; }));
	add(binary(4, "weapondirection", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weapondirection")); return {}; }));
	add(binary(4, "ctrlsetautoscrolldelay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetautoscrolldelay")); return {}; }));
	add(binary(4, "countunknown", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "countunknown")); return {}; }));
	add(binary(4, "ctrlmapworldtoscreen", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapworldtoscreen")); return {}; }));
	add(binary(4, "ropeattachto", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeattachto")); return {}; }));
	add(binary(4, "addpublicvariableeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addpublicvariableeventhandler")); return {}; }));
	add(binary(4, "getpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpos")); return {}; }));
	add(binary(4, "ctrlsetactivecolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetactivecolor")); return {}; }));
	add(binary(4, "moveincargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveincargo")); return {}; }));
	add(binary(4, "canadditemtouniform", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canadditemtouniform")); return {}; }));
	add(binary(4, "setbleedingremaining", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setbleedingremaining")); return {}; }));
	add(binary(4, "setlightflaresize", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightflaresize")); return {}; }));
	add(binary(4, "removemagazines", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemagazines")); return {}; }));
	add(binary(4, "vectormodeltoworldvisual", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectormodeltoworldvisual")); return {}; }));
	add(binary(4, "execeditorscript", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "execeditorscript")); return {}; }));
	add(binary(4, "setparticleclass", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setparticleclass")); return {}; }));
	add(binary(4, "setparticlecircle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setparticlecircle")); return {}; }));
	add(binary(4, "foreachmember", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "foreachmember")); return {}; }));
	add(binary(4, "setvelocitymodelspace", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvelocitymodelspace")); return {}; }));
	add(binary(4, "animatebay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animatebay")); return {}; }));
	add(binary(4, "findcover", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "findcover")); return {}; }));
	add(binary(4, "vectorfromto", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectorfromto")); return {}; }));
	add(binary(4, "ctrlsetfonth1", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth1")); return {}; }));
	add(binary(4, "ctrlsettooltipcolorbox", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettooltipcolorbox")); return {}; }));
	add(binary(4, "drawlocation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawlocation")); return {}; }));
	add(binary(4, "setwaypointdescription", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointdescription")); return {}; }));
	add(binary(4, "menusetpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetpicture")); return {}; }));
	add(binary(4, "additemcargoglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additemcargoglobal")); return {}; }));
	add(binary(4, "radiochannelremove", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiochannelremove")); return {}; }));
	add(binary(4, "removedrawicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removedrawicon")); return {}; }));
	add(binary(4, "setlightattenuation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlightattenuation")); return {}; }));
	add(binary(4, "ctrlsetfonth2", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth2")); return {}; }));
	add(binary(4, "setname", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setname")); return {}; }));
	add(binary(4, "lbvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbvalue")); return {}; }));
	add(binary(4, "addgroupicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addgroupicon")); return {}; }));
	add(binary(4, "menuexpand", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuexpand")); return {}; }));
	add(binary(4, "ppeffectforceinnvg", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectforceinnvg")); return {}; }));
	add(binary(4, "setgroupowner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupowner")); return {}; }));
	add(binary(4, "setvehiclearmor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclearmor")); return {}; }));
	add(binary(4, "addmenu", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmenu")); return {}; }));
	add(binary(4, "savestatus", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "savestatus")); return {}; }));
	add(binary(4, "ctrlmapanimadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapanimadd")); return {}; }));
	add(binary(4, "setstamina", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setstamina")); return {}; }));
	add(binary(4, "ctrlsetfonth3", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth3")); return {}; }));
	add(binary(4, "setwaves", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaves")); return {}; }));
	add(binary(4, "slidersetposition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetposition")); return {}; }));
	add(binary(4, "campreparerelpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparerelpos")); return {}; }));
	add(binary(4, "setconvoyseparation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setconvoyseparation")); return {}; }));
	add(binary(4, "enablefatigue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablefatigue")); return {}; }));
	add(binary(4, "moveindriver", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveindriver")); return {}; }));
	add(binary(4, "selectdiarysubject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectdiarysubject")); return {}; }));
	add(binary(4, "canslingload", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canslingload")); return {}; }));
	add(binary(4, "createmissiondisplay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createmissiondisplay")); return {}; }));
	add(binary(4, "setfuelcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfuelcargo")); return {}; }));
	add(binary(4, "dotarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dotarget")); return {}; }));
	add(binary(4, "addvest", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addvest")); return {}; }));
	add(binary(4, "remoteexeccall", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remoteexeccall")); return {}; }));
	add(binary(4, "ctrlsetfonth4", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth4")); return {}; }));
	add(binary(4, "kbreact", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbreact")); return {}; }));
	add(binary(4, "land", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "land")); return {}; }));
	add(binary(4, "enablegunlights", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablegunlights")); return {}; }));
	add(binary(4, "setowner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setowner")); return {}; }));
	add(binary(4, "ctrlsetfonth5", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth5")); return {}; }));
	add(binary(4, "lnbsetpictureright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpictureright")); return {}; }));
	add(binary(4, "ctremoveheaders", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctremoveheaders")); return {}; }));
	add(binary(4, "switchcamera", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchcamera")); return {}; }));
	add(binary(4, "setunloadincombat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunloadincombat")); return {}; }));
	add(binary(4, "inarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inarea")); return {}; }));
	add(binary(4, "skillfinal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "skillfinal")); return {}; }));
	add(binary(4, "loadidentity", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadidentity")); return {}; }));
	add(binary(4, "addsecondaryweaponitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addsecondaryweaponitem")); return {}; }));
	add(binary(4, "ctrlsetfonth6", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth6")); return {}; }));
	add(binary(4, "removecuratorcameraarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removecuratorcameraarea")); return {}; }));
	add(binary(4, "removeteammember", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeteammember")); return {}; }));
	add(binary(4, "buttonsetaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buttonsetaction")); return {}; }));
	add(binary(4, "menudelete", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menudelete")); return {}; }));
	add(binary(4, "joinassilent", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "joinassilent")); return {}; }));
	add(binary(4, "modeltoworldworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "modeltoworldworld")); return {}; }));
	add(binary(4, "lnbcolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbcolorright")); return {}; }));
	add(binary(4, "tvcollapse", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcollapse")); return {}; }));
	add(binary(4, "inflame", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inflame")); return {}; }));
	add(binary(4, "lnbsetcolumnspos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolumnspos")); return {}; }));
	add(binary(4, "say2d", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "say2d")); return {}; }));
	add(binary(4, "commandchat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandchat")); return {}; }));
	add(binary(4, "hintc", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hintc")); return {}; }));
	add(binary(4, "tvsetcursel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetcursel")); return {}; }));
	add(binary(4, "setwaypointvisible", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointvisible")); return {}; }));
	add(binary(4, "nearobjects", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearobjects")); return {}; }));
	add(binary(4, "hideobjectglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hideobjectglobal")); return {}; }));
	add(binary(4, "lnbcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbcolor")); return {}; }));
	add(binary(4, "setsimpletaskdestination", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimpletaskdestination")); return {}; }));
	add(binary(4, "commandartilleryfire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandartilleryfire")); return {}; }));
	add(binary(4, "setvehicleradar", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicleradar")); return {}; }));
	add(binary(4, "dosuppressivefire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dosuppressivefire")); return {}; }));
	add(binary(4, "assignteam", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignteam")); return {}; }));
	add(binary(4, "kbhastopic", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbhastopic")); return {}; }));
	add(binary(4, "menutext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menutext")); return {}; }));
	add(binary(4, "lnbaddcolumn", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbaddcolumn")); return {}; }));
	add(binary(4, "settriggeractivation", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggeractivation")); return {}; }));
	add(binary(4, "additemtovest", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additemtovest")); return {}; }));
	add(binary(4, "assignitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignitem")); return {}; }));
	add(binary(4, "adduniform", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "adduniform")); return {}; }));
	add(binary(4, "globalchat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "globalchat")); return {}; }));
	add(binary(4, "menushortcuttext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menushortcuttext")); return {}; }));
	add(binary(4, "ctrlsetfonth3b", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfonth3b")); return {}; }));
	add(binary(4, "stop", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "stop")); return {}; }));
	add(binary(4, "setvehicleammo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicleammo")); return {}; }));
	add(binary(4, "lnbsetpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicture")); return {}; }));
	add(binary(4, "setcombatmode", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcombatmode")); return {}; }));
	add(binary(4, "tvsetvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetvalue")); return {}; }));
	add(binary(4, "setobjecttexture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjecttexture")); return {}; }));
	add(binary(4, "assigntoairport", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assigntoairport")); return {}; }));
	add(binary(4, "enableattack", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableattack")); return {}; }));
	add(binary(4, "createmenu", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createmenu")); return {}; }));
	add(binary(4, "debugfsm", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "debugfsm")); return {}; }));
	add(binary(4, "settext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settext")); return {}; }));
	add(binary(4, "camsetfovrange", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetfovrange")); return {}; }));
	add(binary(4, "synchronizeobjectsremove", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizeobjectsremove")); return {}; }));
	add(binary(4, "menudata", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menudata")); return {}; }));
	add(binary(4, "modeltoworld", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "modeltoworld")); return {}; }));
	add(binary(4, "checkvisibility", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "checkvisibility")); return {}; }));
	add(binary(4, "kbremovetopic", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbremovetopic")); return {}; }));
	add(binary(4, "settriggerarea", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggerarea")); return {}; }));
	add(binary(4, "campreparedive", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparedive")); return {}; }));
	add(binary(4, "setwaypointtimeout", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointtimeout")); return {}; }));
	add(binary(4, "enableaimprecision", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableaimprecision")); return {}; }));
	add(binary(4, "assignascargoindex", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignascargoindex")); return {}; }));
	add(binary(4, "emptypositions", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "emptypositions")); return {}; }));
	add(binary(4, "commandmove", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandmove")); return {}; }));
	add(binary(4, "ammo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ammo")); return {}; }));
	add(binary(4, "ctsetrowtemplate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctsetrowtemplate")); return {}; }));
	add(binary(4, "allowfleeing", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowfleeing")); return {}; }));
	add(binary(4, "setflagowner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setflagowner")); return {}; }));
	add(binary(4, "targetsaggregate", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "targetsaggregate")); return {}; }));
	add(binary(4, "gethitpointdamage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gethitpointdamage")); return {}; }));
	add(binary(4, "leavevehicle", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leavevehicle")); return {}; }));
	add(binary(4, "unassignitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unassignitem")); return {}; }));
	add(binary(4, "setspeech", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setspeech")); return {}; }));
	add(binary(4, "addheadgear", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addheadgear")); return {}; }));
	add(binary(4, "setfeaturetype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfeaturetype")); return {}; }));
	add(binary(4, "set3denlayer", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denlayer")); return {}; }));
	add(binary(4, "setvectordirandup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvectordirandup")); return {}; }));
	add(binary(4, "lnbsetpicturecolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolor")); return {}; }));
	add(binary(4, "commandtarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandtarget")); return {}; }));
	add(binary(4, "flyinheight", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flyinheight")); return {}; }));
	add(binary(4, "setside", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setside")); return {}; }));
	add(binary(4, "lockdriver", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockdriver")); return {}; }));
	add(binary(4, "addwaypoint", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addwaypoint")); return {}; }));
	add(binary(4, "settriggertext", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggertext")); return {}; }));
	add(binary(4, "synchronizetrigger", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizetrigger")); return {}; }));
	add(binary(4, "getobjectargument", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectargument")); return {}; }));
	add(binary(4, "addeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addeventhandler")); return {}; }));
	add(binary(4, "sethit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethit")); return {}; }));
	add(binary(4, "tvsetpicturerightcolorselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturerightcolorselected")); return {}; }));
	add(binary(4, "exec", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "exec")); return {}; }));
	add(binary(4, "setovercast", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setovercast")); return {}; }));
	add(binary(4, "getcargoindex", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcargoindex")); return {}; }));
	add(binary(4, "setradiomsg", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setradiomsg")); return {}; }));
	add(binary(4, "setvehiclereportremotetargets", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclereportremotetargets")); return {}; }));
	add(binary(4, "menusetaction", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetaction")); return {}; }));
	add(binary(4, "setsoundeffect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsoundeffect")); return {}; }));
	add(binary(4, "objstatus", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "objstatus")); return {}; }));
	add(binary(4, "geteditorobjectscope", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "geteditorobjectscope")); return {}; }));
	add(binary(4, "customchat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "customchat")); return {}; }));
	add(binary(4, "move", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "move")); return {}; }));
	add(binary(4, "setrotorbrakertd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrotorbrakertd")); return {}; }));
	add(binary(4, "ctsetcursel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctsetcursel")); return {}; }));
	add(binary(4, "inrangeofartillery", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inrangeofartillery")); return {}; }));
	add(binary(4, "listobjects", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "listobjects")); return {}; }));
	add(binary(4, "connectterminaltouav", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "connectterminaltouav")); return {}; }));
	add(binary(4, "setwingforcescalertd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwingforcescalertd")); return {}; }));
	add(binary(4, "ctrladdeventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrladdeventhandler")); return {}; }));
	add(binary(4, "setparticlefire", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setparticlefire")); return {}; }));
	add(binary(4, "lbsetpicturecolorselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolorselected")); return {}; }));
	add(binary(4, "setskill", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setskill")); return {}; }));
	add(binary(4, "removeweaponcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeweaponcargo")); return {}; }));
	add(binary(4, "unlinkitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unlinkitem")); return {}; }));
	add(binary(4, "currentmagazineturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentmagazineturret")); return {}; }));
	add(binary(4, "forgettarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forgettarget")); return {}; }));
	add(binary(4, "setbrakesrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setbrakesrtd")); return {}; }));
	add(binary(4, "worldtomodelvisual", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "worldtomodelvisual")); return {}; }));
	add(binary(4, "faderadio", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "faderadio")); return {}; }));
	add(binary(4, "setoxygenremaining", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setoxygenremaining")); return {}; }));
	add(binary(4, "getobjectchildren", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectchildren")); return {}; }));
	add(binary(4, "setimportance", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setimportance")); return {}; }));
	add(binary(4, "countfriendly", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "countfriendly")); return {}; }));
	add(binary(4, "camcommand", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camcommand")); return {}; }));
	add(binary(4, "removegroupicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removegroupicon")); return {}; }));
	add(binary(4, "publicvariableclient", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "publicvariableclient")); return {}; }));
	add(binary(4, "vehiclechat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vehiclechat")); return {}; }));
	add(binary(4, "radiochanneladd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiochanneladd")); return {}; }));
	add(binary(4, "ctrlsetmodelscale", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetmodelscale")); return {}; }));
	add(binary(4, "lnbpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbpicture")); return {}; }));
	add(binary(4, "findemptypositionready", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "findemptypositionready")); return {}; }));
	add(binary(4, "enableautotrimrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableautotrimrtd")); return {}; }));
	add(binary(4, "assignasdriver", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignasdriver")); return {}; }));
	add(binary(4, "enablecopilot", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablecopilot")); return {}; }));
	add(binary(4, "menuadd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuadd")); return {}; }));
	add(binary(4, "landat", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "landat")); return {}; }));
	add(binary(4, "onshownewobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onshownewobject")); return {}; }));
	add(binary(4, "setwaypointloitertype", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointloitertype")); return {}; }));
	add(binary(4, "allowcrewinimmobile", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowcrewinimmobile")); return {}; }));
	add(binary(4, "settriggerstatements", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settriggerstatements")); return {}; }));
	add(binary(4, "setgusts", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgusts")); return {}; }));
	add(binary(4, "setrank", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrank")); return {}; }));
	add(binary(4, "clear3denattribute", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clear3denattribute")); return {}; }));
	add(binary(4, "enableirlasers", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableirlasers")); return {}; }));
	add(binary(4, "enablechannel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablechannel")); return {}; }));
	add(binary(4, "getenvsoundcontroller", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getenvsoundcontroller")); return {}; }));
	add(binary(4, "lnbtextright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbtextright")); return {}; }));
	add(binary(4, "canadditemtovest", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canadditemtovest")); return {}; }));
	add(binary(4, "tvsetpicturerightcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturerightcolor")); return {}; }));
	add(binary(4, "addscoreside", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addscoreside")); return {}; }));
	add(binary(4, "enableropeattach", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableropeattach")); return {}; }));
	add(binary(4, "setvehicleammodef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehicleammodef")); return {}; }));
	add(binary(4, "enableautostartuprtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableautostartuprtd")); return {}; }));
	add(binary(4, "setmagazineturretammo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmagazineturretammo")); return {}; }));
	add(binary(4, "gethidefrom", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gethidefrom")); return {}; }));
	add(binary(4, "ondoubleclick", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ondoubleclick")); return {}; }));
	add(binary(4, "removeweaponattachmentcargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeweaponattachmentcargo")); return {}; }));
	add(binary(4, "setrepaircargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setrepaircargo")); return {}; }));
	add(binary(4, "setunconscious", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setunconscious")); return {}; }));
	add(binary(4, "setgroupicon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupicon")); return {}; }));
	add(binary(4, "setwaypointbehaviour", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwaypointbehaviour")); return {}; }));
	add(binary(4, "slidersetspeed", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetspeed")); return {}; }));
	add(binary(4, "inareaarray", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inareaarray")); return {}; }));
	add(binary(4, "createdisplay", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createdisplay")); return {}; }));
	add(binary(4, "lnbvalue", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbvalue")); return {}; }));
	add(binary(4, "tvpicture", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvpicture")); return {}; }));
	add(binary(4, "setcuratorcoef", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcuratorcoef")); return {}; }));
	add(binary(4, "lnbsetpicturecolorselected", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorselected")); return {}; }));
	add(binary(4, "addcuratoreditableobjects", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcuratoreditableobjects")); return {}; }));
	add(binary(4, "infopanelcomponents", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "infopanelcomponents")); return {}; }));
	add(binary(4, "addbackpackglobal", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addbackpackglobal")); return {}; }));
	add(binary(4, "kbwassaid", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "kbwassaid")); return {}; }));
	add(binary(4, "getcompatiblepylonmagazines", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcompatiblepylonmagazines")); return {}; }));
	add(binary(4, "evalobjectargument", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "evalobjectargument")); return {}; }));
	add(binary(4, "hcselectgroup", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcselectgroup")); return {}; }));
	add(binary(4, "menusetcheck", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetcheck")); return {}; }));
	add(binary(4, "removecuratoreditableobjects", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removecuratoreditableobjects")); return {}; }));
	add(binary(4, "lnbsetcolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolorright")); return {}; }));
	add(binary(4, "addbackpack", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addbackpack")); return {}; }));
	add(binary(4, "ctrlsetfontheightsecondary", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheightsecondary")); return {}; }));
	add(binary(4, "setfsmvariable", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setfsmvariable")); return {}; }));
	add(binary(4, "campreparefovrange", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparefovrange")); return {}; }));
	add(binary(4, "moveincommander", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveincommander")); return {}; }));
	add(binary(4, "groupselectunit", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupselectunit")); return {}; }));
	add(binary(4, "foreachmemberagent", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "foreachmemberagent")); return {}; }));
	add(binary(4, "lnbsetcolor", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolor")); return {}; }));
	add(binary(4, "fireattarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fireattarget")); return {}; }));
	add(binary(4, "ctrlseteventhandler", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlseteventhandler")); return {}; }));
	add(binary(4, "setdriveonpath", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdriveonpath")); return {}; }));
	add(binary(4, "setenginerpmrtd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setenginerpmrtd")); return {}; }));
	add(binary(4, "foreachmemberteam", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "foreachmemberteam")); return {}; }));
	add(binary(4, "addownedmine", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addownedmine")); return {}; }));
	add(binary(4, "showneweditorobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showneweditorobject")); return {}; }));
	add(binary(4, "cameraeffect", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cameraeffect")); return {}; }));
	add(binary(4, "setvehiclecargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclecargo")); return {}; }));
	add(binary(4, "getartilleryeta", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getartilleryeta")); return {}; }));
	add(binary(4, "lookatpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lookatpos")); return {}; }));
	add(binary(4, "dofsm", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dofsm")); return {}; }));
	add(binary(4, "setobjectmaterial", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjectmaterial")); return {}; }));
	add(binary(4, "fademusic", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fademusic")); return {}; }));
	add(binary(4, "removealleventhandlers", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removealleventhandlers")); return {}; }));
	add(binary(4, "camsetpos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camsetpos")); return {}; }));
	add(binary(4, "joinas", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "joinas")); return {}; }));
	add(binary(4, "moveingunner", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveingunner")); return {}; }));
	add(binary(4, "campreparepos", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparepos")); return {}; }));
	add(binary(4, "disablecollisionwith", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disablecollisionwith")); return {}; }));
	add(binary(4, "isequaltypearray", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isequaltypearray")); return {}; }));
	add(binary(4, "setvehiclelock", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setvehiclelock")); return {}; }));
	add(binary(4, "addprimaryweaponitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addprimaryweaponitem")); return {}; }));
	add(binary(4, "lbsetcursel", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcursel")); return {}; }));
	add(binary(4, "seteffectcondition", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "seteffectcondition")); return {}; }));
	add(binary(4, "aimedattarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "aimedattarget")); return {}; }));
	add(binary(4, "drawellipse", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawellipse")); return {}; }));
	add(binary(4, "setactualcollectivertd", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setactualcollectivertd")); return {}; }));
	add(binary(4, "editobject", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "editobject")); return {}; }));
	add(binary(4, "lnbsetpicturecolorright", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorright")); return {}; }));
	add(binary(4, "allowdammage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allowdammage")); return {}; }));
	add(binary(4, "setbehaviour", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setbehaviour")); return {}; }));
	add(binary(4, "findnearestenemy", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "findnearestenemy")); return {}; }));
	add(binary(4, "dowatch", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dowatch")); return {}; }));
	add(binary(4, "isirlaseron", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isirlaseron")); return {}; }));
	add(binary(4, "ctrlsetfontheighth1", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth1")); return {}; }));
	add(binary(4, "nearentities", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearentities")); return {}; }));
	add(binary(4, "tvsetpicturerightcolordisabled", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturerightcolordisabled")); return {}; }));
	add(binary(4, "lock", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lock")); return {}; }));
	add(binary(4, "weaponaccessories", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponaccessories")); return {}; }));
	add(binary(4, "magazinesturret", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesturret")); return {}; }));
	add(binary(4, "ctrlsetfontheighth2", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth2")); return {}; }));
	add(binary(4, "campreparefocus", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreparefocus")); return {}; }));
	add(binary(4, "setpitch", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpitch")); return {}; }));
	add(binary(4, "getobjectproxy", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectproxy")); return {}; }));
	add(binary(4, "settaskmarkeroffset", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settaskmarkeroffset")); return {}; }));
	add(binary(4, "setpilotcameradirection", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpilotcameradirection")); return {}; }));
	add(binary(4, "ctrlsetfontheighth3", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth3")); return {}; }));
	add(binary(4, "settargetage", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settargetage")); return {}; }));
	add(binary(4, "setpilotcameratarget", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setpilotcameratarget")); return {}; }));
	add(binary(4, "removesecondaryweaponitem", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removesecondaryweaponitem")); return {}; }));
	add(binary(4, "weaponaccessoriescargo", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponaccessoriescargo")); return {}; }));
	add(binary(4, "removeweapon", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeweapon")); return {}; }));
	add(binary(4, "ctrlsetfontheighth4", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth4")); return {}; }));
	add(binary(4, "menusort", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusort")); return {}; }));
	add(binary(4, "ctrlsetfontheighth5", type::ANY, type::ANY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfontheighth5")); return {}; }));



	add(unary("showradio", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showradio")); return {}; })); /* BOOL */
	add(unary("vectorup", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectorup")); return {}; })); /* OBJECT */
	add(unary("lnbsetcurselrow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcurselrow")); return {}; })); /* ARRAY */
	add(unary("animationnames", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animationnames")); return {}; })); /* OBJECT */
	add(unary("currentzeroing", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentzeroing")); return {}; })); /* OBJECT */
	add(unary("isonroad", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isonroad")); return {}; })); /* ARRAY,OBJECT */
	add(unary("triggerarea", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerarea")); return {}; })); /* OBJECT */
	add(unary("get3dengrid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3dengrid")); return {}; })); /* STRING */
	add(unary("settrafficspeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settrafficspeed")); return {}; })); /* ARRAY */
	add(unary("supportinfo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "supportinfo")); return {}; })); /* STRING */
	add(unary("menucollapse", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menucollapse")); return {}; })); /* ARRAY */
	add(unary("taskdescription", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskdescription")); return {}; })); /* TASK */
	add(unary("isautohoveron", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isautohoveron")); return {}; })); /* OBJECT */
	add(unary("ctrlangle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlangle")); return {}; })); /* CONTROL */
	add(unary("menusetdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetdata")); return {}; })); /* ARRAY */
	add(unary("moonphase", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moonphase")); return {}; })); /* ARRAY */
	add(unary("onplayerdisconnected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onplayerdisconnected")); return {}; })); /* STRING,CODE */
	add(unary("isshowing3dicons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isshowing3dicons")); return {}; })); /* CONTROL */
	add(unary("lbsetcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcolor")); return {}; })); /* ARRAY */
	add(unary("getallhitpointsdamage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getallhitpointsdamage")); return {}; })); /* OBJECT */
	add(unary("lbsetcolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcolorright")); return {}; })); /* ARRAY */
	add(unary("triggertext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggertext")); return {}; })); /* OBJECT */
	add(unary("getfatigue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getfatigue")); return {}; })); /* OBJECT */
	add(unary("ctrlshown", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlshown")); return {}; })); /* CONTROL */
	add(unary("eyedirection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "eyedirection")); return {}; })); /* OBJECT */
	add(unary("ctrlmodel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmodel")); return {}; })); /* CONTROL */
	add(unary("tvtext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvtext")); return {}; })); /* ARRAY */
	add(unary("ropeunwind", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeunwind")); return {}; })); /* ARRAY */
	add(unary("fillweaponsfrompool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fillweaponsfrompool")); return {}; })); /* OBJECT */
	add(unary("hcselected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcselected")); return {}; })); /* OBJECT */
	add(unary("asltoagl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "asltoagl")); return {}; })); /* ARRAY */
	add(unary("isobjectrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isobjectrtd")); return {}; })); /* OBJECT */
	add(unary("enabletraffic", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enabletraffic")); return {}; })); /* BOOL */
	add(unary("roledescription", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "roledescription")); return {}; })); /* OBJECT */
	add(unary("simpletasks", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simpletasks")); return {}; })); /* OBJECT */
	add(unary("getammocargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getammocargo")); return {}; })); /* OBJECT */
	add(unary("flagowner", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flagowner")); return {}; })); /* OBJECT */
	add(unary("tvdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvdata")); return {}; })); /* ARRAY */
	add(unary("getenginetargetrpmrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getenginetargetrpmrtd")); return {}; })); /* OBJECT */
	add(unary("waypointattachedvehicle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointattachedvehicle")); return {}; })); /* ARRAY */
	add(unary("speed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "speed")); return {}; })); /* OBJECT */
	add(unary("menusetvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetvalue")); return {}; })); /* ARRAY */
	add(unary("reloadenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "reloadenabled")); return {}; })); /* OBJECT */
	add(unary("rating", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rating")); return {}; })); /* OBJECT */
	add(unary("hideobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hideobject")); return {}; })); /* OBJECT */
	add(unary("useaiopermapobstructiontest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "useaiopermapobstructiontest")); return {}; })); /* BOOL */
	add(unary("primaryweapon", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "primaryweapon")); return {}; })); /* OBJECT */
	add(unary("addtoremainscollector", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addtoremainscollector")); return {}; })); /* ARRAY */
	add(unary("uisleep", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uisleep")); return {}; })); /* SCALAR */
	add(unary("ctrlmodelscale", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmodelscale")); return {}; })); /* CONTROL */
	add(unary("curatorcameraareaceiling", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorcameraareaceiling")); return {}; })); /* OBJECT */
	add(unary("removevest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removevest")); return {}; })); /* OBJECT */
	add(unary("gearslotdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gearslotdata")); return {}; })); /* CONTROL */
	add(unary("formationposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formationposition")); return {}; })); /* OBJECT */
	add(unary("gettrimoffsetrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gettrimoffsetrtd")); return {}; })); /* OBJECT */
	add(unary("getmissionconfigvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmissionconfigvalue")); return {}; })); /* ARRAY,STRING */
	add(unary("simulcloudocclusion", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simulcloudocclusion")); return {}; })); /* ARRAY */
	add(unary("movetofailed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "movetofailed")); return {}; })); /* OBJECT */
	add(unary("playmission", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playmission")); return {}; })); /* ARRAY */
	add(unary("rankid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rankid")); return {}; })); /* OBJECT */
	add(unary("showgps", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showgps")); return {}; })); /* BOOL */
	add(unary("synchronizedtriggers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizedtriggers")); return {}; })); /* ARRAY */
	add(unary("removeallitemswithmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallitemswithmagazines")); return {}; })); /* OBJECT */
	add(unary("setaperturenew", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setaperturenew")); return {}; })); /* ARRAY */
	add(unary("simulinclouds", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simulinclouds")); return {}; })); /* ARRAY */
	add(unary("menuurl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuurl")); return {}; })); /* ARRAY */
	add(unary("leaderboardsrequestuploadscorekeepbest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardsrequestuploadscorekeepbest")); return {}; })); /* ARRAY */
	add(unary("removebackpackglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removebackpackglobal")); return {}; })); /* OBJECT */
	add(unary("exportjipmessages", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "exportjipmessages")); return {}; })); /* STRING */
	add(unary("ctrlhtmlloaded", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlhtmlloaded")); return {}; })); /* CONTROL */
	add(unary("face", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "face")); return {}; })); /* OBJECT */
	add(unary("lbsetselectcolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetselectcolorright")); return {}; })); /* ARRAY */
	add(unary("getvehiclecargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getvehiclecargo")); return {}; })); /* OBJECT */
	add(unary("deletelocation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletelocation")); return {}; })); /* LOCATION */
	add(unary("waypointvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointvisible")); return {}; })); /* ARRAY */
	add(unary("enablesatnormalondetail", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablesatnormalondetail")); return {}; })); /* BOOL */
	add(unary("getposatl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposatl")); return {}; })); /* OBJECT */
	add(unary("objectcurators", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "objectcurators")); return {}; })); /* OBJECT */
	add(unary("activatekey", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "activatekey")); return {}; })); /* STRING */
	add(unary("disableremotesensors", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableremotesensors")); return {}; })); /* BOOL */
	add(unary("attackenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attackenabled")); return {}; })); /* OBJECT,GROUP */
	add(unary("curatoreditingarea", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatoreditingarea")); return {}; })); /* OBJECT */
	add(unary("playmusic", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playmusic")); return {}; })); /* STRING, ARRAY */
	add(unary("assignedteam", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedteam")); return {}; })); /* OBJECT */
	add(unary("vectordirvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectordirvisual")); return {}; })); /* OBJECT */
	add(unary("lnbsetvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetvalue")); return {}; })); /* ARRAY */
	add(unary("triggeractivated", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggeractivated")); return {}; })); /* OBJECT */
	add(unary("set3denmissionattributes", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denmissionattributes")); return {}; })); /* ARRAY */
	add(unary("unassignvehicle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unassignvehicle")); return {}; })); /* OBJECT */
	add(unary("boundingbox", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "boundingbox")); return {}; })); /* OBJECT */
	add(unary("ppeffectcreate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectcreate")); return {}; })); /* ARRAY */
	add(unary("movetime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "movetime")); return {}; })); /* OBJECT */
	add(unary("waypointspeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointspeed")); return {}; })); /* ARRAY */
	add(unary("tvpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvpictureright")); return {}; })); /* ARRAY */
	add(unary("ctrltext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrltext")); return {}; })); /* CONTROL, SCALAR */
	add(unary("ctrlclassname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlclassname")); return {}; })); /* CONTROL */
	add(unary("actionname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionname")); return {}; })); /* STRING */
	add(unary("animationstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "animationstate")); return {}; })); /* OBJECT */
	add(unary("menuchecked", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuchecked")); return {}; })); /* ARRAY */
	add(unary("lineintersectsobjs", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lineintersectsobjs")); return {}; })); /* ARRAY */
	add(unary("weaponcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponcargo")); return {}; })); /* OBJECT */
	add(unary("buttonaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buttonaction")); return {}; })); /* CONTROL, SCALAR */
	add(unary("set3deniconsvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3deniconsvisible")); return {}; })); /* ARRAY */
	add(unary("hcshowbar", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcshowbar")); return {}; })); /* BOOL */
	add(unary("drop", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drop")); return {}; })); /* ARRAY */
	add(unary("isturnedout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isturnedout")); return {}; })); /* OBJECT */
	add(unary("addweaponpool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addweaponpool")); return {}; })); /* ARRAY */
	add(unary("camtarget", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camtarget")); return {}; })); /* OBJECT */
	add(unary("setwinddir", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwinddir")); return {}; })); /* ARRAY */
	add(unary("getcameraviewdirection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcameraviewdirection")); return {}; })); /* OBJECT */
	add(unary("set3denattributes", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denattributes")); return {}; })); /* ARRAY */
	add(unary("slidersetrange", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetrange")); return {}; })); /* ARRAY */
	add(unary("textlogformat", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "textlogformat")); return {}; })); /* ARRAY */
	add(unary("lnbsettext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsettext")); return {}; })); /* ARRAY */
	add(unary("waypointstatements", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointstatements")); return {}; })); /* ARRAY */
	add(unary("scudstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "scudstate")); return {}; })); /* OBJECT */
	add(unary("sliderrange", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sliderrange")); return {}; })); /* CONTROL, SCALAR */
	add(unary("isautotrimonrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isautotrimonrtd")); return {}; })); /* OBJECT */
	add(unary("boundingboxreal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "boundingboxreal")); return {}; })); /* OBJECT */
	add(unary("terrainintersect", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "terrainintersect")); return {}; })); /* ARRAY */
	add(unary("ropedestroy", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropedestroy")); return {}; })); /* OBJECT */
	add(unary("tvsetpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpictureright")); return {}; })); /* ARRAY */
	add(unary("createteam", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createteam")); return {}; })); /* ARRAY */
	add(unary("lnbsettextright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsettextright")); return {}; })); /* ARRAY */
	add(unary("lbsetpicturecolordisabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolordisabled")); return {}; })); /* ARRAY */
	add(unary("setcamshakeparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcamshakeparams")); return {}; })); /* ARRAY */
	add(unary("lognetwork", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lognetwork")); return {}; })); /* ARRAY */
	add(unary("debriefingtext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "debriefingtext")); return {}; })); /* STRING */
	add(unary("lnbsortbyvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsortbyvalue")); return {}; })); /* ARRAY */
	add(unary("istouchingground", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "istouchingground")); return {}; })); /* OBJECT */
	add(unary("taskmarkeroffset", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskmarkeroffset")); return {}; })); /* OBJECT */
	add(unary("aisfinishheal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "aisfinishheal")); return {}; })); /* ARRAY */
	add(unary("tvsetpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicture")); return {}; })); /* ARRAY */
	add(unary("vest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vest")); return {}; })); /* OBJECT */
	add(unary("headgear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "headgear")); return {}; })); /* OBJECT */
	add(unary("lnbsetdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetdata")); return {}; })); /* ARRAY */
	add(unary("fuel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fuel")); return {}; })); /* OBJECT */
	add(unary("agltoasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "agltoasl")); return {}; })); /* ARRAY */
	add(binary(4, "setdamage", type::OBJECT, type::ARRAY, "", [](virtualmachine* vm, value::cref l, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdamage")); return {}; }));
	add(unary("weaponsitemscargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponsitemscargo")); return {}; })); /* OBJECT */
	add(unary("linearconversion", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "linearconversion")); return {}; })); /* ARRAY */
	add(unary("removemissioneventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemissioneventhandler")); return {}; })); /* ARRAY */
	add(unary("getmodelinfo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmodelinfo")); return {}; })); /* OBJECT */
	add(unary("dogetout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dogetout")); return {}; })); /* ARRAY,OBJECT */
	add(unary("getbleedingremaining", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getbleedingremaining")); return {}; })); /* OBJECT */
	add(unary("squadparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "squadparams")); return {}; })); /* OBJECT */
	add(unary("groupfromnetid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupfromnetid")); return {}; })); /* STRING */
	add(unary("leader", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leader")); return {}; })); /* OBJECT, GROUP,TEAM_MEMBER  */
	add(unary("settrafficdistance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settrafficdistance")); return {}; })); /* SCALAR */
	add(unary("currentthrowable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentthrowable")); return {}; })); /* OBJECT */
	add(unary("enableengineartillery", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableengineartillery")); return {}; })); /* BOOL */
	add(unary("terrainintersectasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "terrainintersectasl")); return {}; })); /* ARRAY */
	add(unary("debuglog", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "debuglog")); return {}; })); /* ANY */
	add(unary("lnbsetpicturecolorselectedright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorselectedright")); return {}; })); /* ARRAY */
	add(unary("lnbaddarray", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbaddarray")); return {}; })); /* ARRAY */
	add(unary("savevar", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "savevar")); return {}; })); /* STRING */
	add(unary("onbriefingteamswitch", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onbriefingteamswitch")); return {}; })); /* STRING */
	add(unary("lbsetvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetvalue")); return {}; })); /* ARRAY */
	add(unary("edit3denmissionattributes", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "edit3denmissionattributes")); return {}; })); /* STRING */
	add(unary("uniformitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uniformitems")); return {}; })); /* OBJECT */
	add(unary("getcustomaimcoef", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcustomaimcoef")); return {}; })); /* OBJECT */
	add(unary("ingameuiseteventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ingameuiseteventhandler")); return {}; })); /* ARRAY */
	add(unary("leaderboardrequestrowsfriends", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardrequestrowsfriends")); return {}; })); /* STRING */
	add(unary("showcommandingmenu", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showcommandingmenu")); return {}; })); /* STRING */
	add(unary("unitrecoilcoefficient", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitrecoilcoefficient")); return {}; })); /* OBJECT */
	add(unary("unassigncurator", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unassigncurator")); return {}; })); /* OBJECT */
	add(unary("actionkeysnames", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionkeysnames")); return {}; })); /* ARRAY,STRING */
	add(unary("clearmagazinecargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearmagazinecargo")); return {}; })); /* OBJECT */
	add(unary("hostmission", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hostmission")); return {}; })); /* ARRAY */
	add(unary("canmove", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canmove")); return {}; })); /* OBJECT */
	add(unary("getstatvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getstatvalue")); return {}; })); /* STRING */
	add(unary("tvsettext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsettext")); return {}; })); /* ARRAY */
	add(unary("positioncameratoworld", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "positioncameratoworld")); return {}; })); /* ARRAY */
	add(unary("getwingsorientationrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getwingsorientationrtd")); return {}; })); /* OBJECT */
	add(unary("isstaminaenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isstaminaenabled")); return {}; })); /* OBJECT */
	add(unary("weaponsitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponsitems")); return {}; })); /* OBJECT */
	add(unary("unitbackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitbackpack")); return {}; })); /* OBJECT */
	add(unary("finite", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "finite")); return {}; })); /* SCALAR,NaN */
	add(unary("lnbtext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbtext")); return {}; })); /* ARRAY */
	add(unary("teamname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teamname")); return {}; })); /* TEAM_MEMBER */
	add(unary("pickweaponpool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "pickweaponpool")); return {}; })); /* OBJECT */
	add(unary("surfaceiswater", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "surfaceiswater")); return {}; })); /* ARRAY */
	add(unary("getslingload", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getslingload")); return {}; })); /* OBJECT */
	add(unary("reload", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "reload")); return {}; })); /* OBJECT */
	add(unary("tvsetdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetdata")); return {}; })); /* ARRAY */
	add(unary("setterraingrid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setterraingrid")); return {}; })); /* SCALAR */
	add(unary("speaker", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "speaker")); return {}; })); /* OBJECT */
	add(unary("lbsettooltip", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsettooltip")); return {}; })); /* ARRAY */
	add(unary("weapons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weapons")); return {}; })); /* OBJECT */
	add(unary("selectededitorobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectededitorobjects")); return {}; })); /* CONTROL */
	add(unary("removeall3deneventhandlers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeall3deneventhandlers")); return {}; })); /* STRING */
	add(unary("leaderboardsrequestuploadscore", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardsrequestuploadscore")); return {}; })); /* ARRAY */
	add(unary("lnbdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdata")); return {}; })); /* ARRAY */
	add(unary("unitisuav", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitisuav")); return {}; })); /* OBJECT */
	add(unary("lbadd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbadd")); return {}; })); /* ARRAY */
	add(unary("lnbclear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbclear")); return {}; })); /* CONTROL, SCALAR */
	add(unary("assignedtarget", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedtarget")); return {}; })); /* OBJECT */
	add(unary("cameraeffectenablehud", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cameraeffectenablehud")); return {}; })); /* BOOL */
	add(unary("execfsm", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "execfsm")); return {}; })); /* STRING */
	add(unary("attachedto", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attachedto")); return {}; })); /* OBJECT */
	add(unary("showuavfeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showuavfeed")); return {}; })); /* BOOL */
	add(unary("querymagazinepool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "querymagazinepool")); return {}; })); /* STRING */
	add(unary("sizeof", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sizeof")); return {}; })); /* STRING */
	add(unary("landresult", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "landresult")); return {}; })); /* OBJECT */
	add(unary("cbchecked", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cbchecked")); return {}; })); /* CONTROL */
	add(unary("onhcgroupselectionchanged", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onhcgroupselectionchanged")); return {}; })); /* STRING,CODE */
	add(unary("ctrlscale", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlscale")); return {}; })); /* CONTROL */
	add(unary("lbtext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbtext")); return {}; })); /* ARRAY */
	add(unary("clearweaponcargoglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearweaponcargoglobal")); return {}; })); /* OBJECT */
	add(unary("assigneddriver", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assigneddriver")); return {}; })); /* OBJECT */
	add(unary("allcontrols", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allcontrols")); return {}; })); /* DISPLAY */
	add(unary("taskresult", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskresult")); return {}; })); /* TASK */
	add(unary("lbpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbpicture")); return {}; })); /* ARRAY */
	add(unary("do3denaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "do3denaction")); return {}; })); /* STRING */
	add(unary("numbertodate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "numbertodate")); return {}; })); /* ARRAY */
	add(unary("leaderboardstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardstate")); return {}; })); /* STRING */
	add(unary("tvsetpicturecolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturecolor")); return {}; })); /* ARRAY */
	add(unary("secondaryweaponmagazine", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "secondaryweaponmagazine")); return {}; })); /* OBJECT */
	add(unary("setaperture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setaperture")); return {}; })); /* SCALAR */
	add(unary("showpad", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showpad")); return {}; })); /* BOOL */
	add(unary("ctrlidc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlidc")); return {}; })); /* CONTROL */
	add(unary("getdir", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdir")); return {}; })); /* OBJECT */
	add(unary("uniformcontainer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uniformcontainer")); return {}; })); /* OBJECT */
	add(unary("lbsortbyvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsortbyvalue")); return {}; })); /* CONTROL */
	add(unary("isplayer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isplayer")); return {}; })); /* OBJECT */
	add(unary("buldozer_enableroaddiag", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buldozer_enableroaddiag")); return {}; })); /* BOOL */
	add(unary("campreloaded", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "campreloaded")); return {}; })); /* OBJECT */
	add(unary("local", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "local")); return {}; })); /* OBJECT, GROUP */
	add(unary("drawicon3d", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawicon3d")); return {}; })); /* ARRAY */
	add(unary("surfacetype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "surfacetype")); return {}; })); /* ARRAY */
	add(unary("lbdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbdata")); return {}; })); /* ARRAY */
	add(unary("lbdelete", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbdelete")); return {}; })); /* ARRAY */
	add(unary("boundingcenter", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "boundingcenter")); return {}; })); /* OBJECT */
	add(unary("enablediaglegend", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablediaglegend")); return {}; })); /* BOOL */
	add(unary("ctrlidd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlidd")); return {}; })); /* DISPLAY */
	add(unary("fleeing", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fleeing")); return {}; })); /* OBJECT */
	add(unary("getgroupiconparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getgroupiconparams")); return {}; })); /* GROUP */
	add(unary("cutobj", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cutobj")); return {}; })); /* ARRAY */
	add(unary("iscopilotenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "iscopilotenabled")); return {}; })); /* OBJECT */
	add(unary("uniform", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uniform")); return {}; })); /* OBJECT */
	add(unary("delete3denentities", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "delete3denentities")); return {}; })); /* ARRAY */
	add(unary("commandgetout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandgetout")); return {}; })); /* ARRAY,OBJECT */
	add(unary("wfsidetext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "wfsidetext")); return {}; })); /* SIDE, OBJECT, GROUP */
	add(unary("tvexpandall", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvexpandall")); return {}; })); /* SCALAR, CONTROL */
	add(unary("velocitymodelspace", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "velocitymodelspace")); return {}; })); /* OBJECT */
	add(unary("getallownedmines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getallownedmines")); return {}; })); /* OBJECT */
	add(unary("onpreloadstarted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onpreloadstarted")); return {}; })); /* STRING,CODE */
	add(unary("modparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "modparams")); return {}; })); /* ARRAY */
	add(unary("flagtexture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flagtexture")); return {}; })); /* OBJECT */
	add(unary("getfuelcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getfuelcargo")); return {}; })); /* OBJECT */
	add(unary("rotorsrpmrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rotorsrpmrtd")); return {}; })); /* OBJECT */
	add(unary("waypointloiterradius", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointloiterradius")); return {}; })); /* ARRAY */
	add(unary("size", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "size")); return {}; })); /* LOCATION */
	add(unary("captivenum", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "captivenum")); return {}; })); /* OBJECT */
	add(unary("waypointtimeout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointtimeout")); return {}; })); /* ARRAY */
	add(unary("tvsort", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsort")); return {}; })); /* ARRAY */
	add(unary("selectionnames", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectionnames")); return {}; })); /* OBJECT */
	add(unary("lbselection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbselection")); return {}; })); /* CONTROL */
	add(unary("position", type::LOCATION, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "position")); return {}; })); /* LOCATION */
	add(unary("canunloadincombat", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canunloadincombat")); return {}; })); /* OBJECT */
	add(unary("attachedobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attachedobjects")); return {}; })); /* OBJECT */
	add(unary("netid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "netid")); return {}; })); /* OBJECT, GROUP */
	add(unary("waypointcompletionradius", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointcompletionradius")); return {}; })); /* ARRAY */
	add(unary("removeallassigneditems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallassigneditems")); return {}; })); /* OBJECT */
	add(unary("ropeunwound", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeunwound")); return {}; })); /* OBJECT */
	add(unary("waypointposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointposition")); return {}; })); /* ARRAY */
	add(unary("isdlcavailable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isdlcavailable")); return {}; })); /* SCALAR */
	add(unary("waypointtype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointtype")); return {}; })); /* ARRAY */
	add(unary("addswitchableunit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addswitchableunit")); return {}; })); /* OBJECT */
	add(unary("closeoverlay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "closeoverlay")); return {}; })); /* CONTROL */
	add(unary("tvexpand", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvexpand")); return {}; })); /* ARRAY */
	add(unary("getartilleryammo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getartilleryammo")); return {}; })); /* ARRAY */
	add(unary("tvadd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvadd")); return {}; })); /* ARRAY */
	add(unary("owner", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "owner")); return {}; })); /* OBJECT */
	add(unary("progressloadingscreen", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "progressloadingscreen")); return {}; })); /* SCALAR */
	add(unary("estimatedtimeleft", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "estimatedtimeleft")); return {}; })); /* SCALAR */
	add(unary("displayparent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displayparent")); return {}; })); /* DISPLAY */
	add(unary("create3denentity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "create3denentity")); return {}; })); /* ARRAY */
	add(unary("primaryweaponmagazine", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "primaryweaponmagazine")); return {}; })); /* OBJECT */
	add(unary("ctrlparentcontrolsgroup", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlparentcontrolsgroup")); return {}; })); /* CONTROL */
	add(unary("actionkeysimages", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionkeysimages")); return {}; })); /* ARRAY,STRING */
	add(unary("enablesentences", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablesentences")); return {}; })); /* BOOL */
	add(unary("curatoreditableobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatoreditableobjects")); return {}; })); /* OBJECT */
	add(unary("entities", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "entities")); return {}; })); /* STRING, ARRAY */
	add(unary("tvcount", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcount")); return {}; })); /* ARRAY */
	add(unary("setgroupiconsselectable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupiconsselectable")); return {}; })); /* BOOL */
	add(unary("showwarrant", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showwarrant")); return {}; })); /* BOOL */
	add(unary("assigneditems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assigneditems")); return {}; })); /* OBJECT */
	add(unary("groupselectedunits", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupselectedunits")); return {}; })); /* OBJECT */
	add(unary("titlefadeout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "titlefadeout")); return {}; })); /* SCALAR */
	add(unary("atltoasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "atltoasl")); return {}; })); /* ARRAY */
	add(unary("loaduniform", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loaduniform")); return {}; })); /* OBJECT */
	add(unary("someammo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "someammo")); return {}; })); /* OBJECT */
	add(unary("setwind", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setwind")); return {}; })); /* ARRAY */
	add(unary("groupowner", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "groupowner")); return {}; })); /* GROUP */
	add(unary("isweaponrested", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isweaponrested")); return {}; })); /* OBJECT */
	add(unary("isaimprecisionenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isaimprecisionenabled")); return {}; })); /* OBJECT */
	add(unary("isagent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isagent")); return {}; })); /* TEAM_MEMBER */
	add(unary("leaderboardinit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardinit")); return {}; })); /* STRING */
	add(unary("taskcustomdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskcustomdata")); return {}; })); /* TASK */
	add(unary("lnbdeletecolumn", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdeletecolumn")); return {}; })); /* ARRAY */
	add(unary("incapacitatedstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "incapacitatedstate")); return {}; })); /* OBJECT */
	add(unary("saveoverlay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "saveoverlay")); return {}; })); /* CONTROL */
	add(unary("magazinesallturrets", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesallturrets")); return {}; })); /* OBJECT */
	add(unary("collectivertd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "collectivertd")); return {}; })); /* OBJECT */
	add(unary("tvdelete", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvdelete")); return {}; })); /* ARRAY */
	add(unary("taskcompleted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskcompleted")); return {}; })); /* TASK */
	add(unary("playsound3d", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playsound3d")); return {}; })); /* ARRAY */
	add(unary("getanimaimprecision", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getanimaimprecision")); return {}; })); /* OBJECT */
	add(unary("waypointformation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointformation")); return {}; })); /* ARRAY */
	add(unary("cantriggerdynamicsimulation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cantriggerdynamicsimulation")); return {}; })); /* OBJECT */
	add(unary("get3denconnections", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denconnections")); return {}; })); /* ANY */
	add(unary("ongroupiconoverenter", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ongroupiconoverenter")); return {}; })); /* STRING,CODE */
	add(unary("backpackmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpackmagazines")); return {}; })); /* OBJECT */
	add(unary("cutrsc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cutrsc")); return {}; })); /* ARRAY */
	add(unary("weaponlowered", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponlowered")); return {}; })); /* OBJECT */
	add(unary("handshit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "handshit")); return {}; })); /* OBJECT */
	add(unary("selectbestplaces", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectbestplaces")); return {}; })); /* ARRAY */
	add(unary("removeallcuratorcameraareas", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallcuratorcameraareas")); return {}; })); /* OBJECT */
	add(unary("taskparent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskparent")); return {}; })); /* TASK */
	add(unary("triggertype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggertype")); return {}; })); /* OBJECT */
	add(unary("hidebody", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hidebody")); return {}; })); /* OBJECT */
	add(unary("getpilotcameratarget", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpilotcameratarget")); return {}; })); /* OBJECT */
	add(unary("menuenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuenabled")); return {}; })); /* ARRAY */
	add(unary("showchat", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showchat")); return {}; })); /* BOOL */
	add(unary("scoreside", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "scoreside")); return {}; })); /* SIDE */
	add(unary("behaviour", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "behaviour")); return {}; })); /* OBJECT */
	add(unary("getmagazinecargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmagazinecargo")); return {}; })); /* OBJECT */
	add(unary("nearestterrainobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestterrainobjects")); return {}; })); /* ARRAY */
	add(unary("lifestate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lifestate")); return {}; })); /* OBJECT */
	add(unary("issprintallowed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "issprintallowed")); return {}; })); /* OBJECT */
	add(unary("classname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "classname")); return {}; })); /* LOCATION */
	add(unary("difficultyoption", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "difficultyoption")); return {}; })); /* STRING */
	add(unary("getfieldmanualstartpage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getfieldmanualstartpage")); return {}; })); /* DISPLAY */
	add(unary("islocalized", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "islocalized")); return {}; })); /* STRING */
	add(unary("triggertimeout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggertimeout")); return {}; })); /* OBJECT */
	add(unary("remoteexec", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remoteexec")); return {}; })); /* ARRAY */
	add(unary("removeallcontainers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallcontainers")); return {}; })); /* OBJECT */
	add(unary("hcleader", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcleader")); return {}; })); /* GROUP */
	add(unary("detectedmines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "detectedmines")); return {}; })); /* SIDE */
	add(unary("getobjecttype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjecttype")); return {}; })); /* OBJECT */
	add(unary("ropeattachedto", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeattachedto")); return {}; })); /* OBJECT */
	add(unary("diag_codeperformance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_codeperformance")); return {}; })); /* ARRAY */
	add(unary("inputaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inputaction")); return {}; })); /* STRING */
	add(unary("oncommandmodechanged", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "oncommandmodechanged")); return {}; })); /* STRING,CODE */
	add(unary("movetocompleted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "movetocompleted")); return {}; })); /* OBJECT */
	add(unary("requiredversion", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "requiredversion")); return {}; })); /* STRING */
	add(unary("lnbaddrow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbaddrow")); return {}; })); /* ARRAY */
	add(unary("textlog", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "textlog")); return {}; })); /* ANY */
	add(unary("openyoutubevideo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "openyoutubevideo")); return {}; })); /* STRING */
	add(unary("combatmode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "combatmode")); return {}; })); /* OBJECT,GROUP */
	add(unary("ppeffectdestroy", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectdestroy")); return {}; })); /* SCALAR, ARRAY */
	add(unary("add3deneventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "add3deneventhandler")); return {}; })); /* ARRAY */
	add(unary("canstand", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canstand")); return {}; })); /* OBJECT */
	add(unary("rotorsforcesrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rotorsforcesrtd")); return {}; })); /* OBJECT */
	add(unary("formationleader", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formationleader")); return {}; })); /* OBJECT */
	add(unary("radiochannelcreate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiochannelcreate")); return {}; })); /* ARRAY */
	add(unary("enginestorquertd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enginestorquertd")); return {}; })); /* OBJECT */
	add(unary("isengineon", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isengineon")); return {}; })); /* OBJECT */
	add(unary("add3denconnection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "add3denconnection")); return {}; })); /* ARRAY */
	add(unary("collapseobjecttree", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "collapseobjecttree")); return {}; })); /* CONTROL */
	add(unary("waypointhouseposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointhouseposition")); return {}; })); /* ARRAY */
	add(unary("getplayerscores", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getplayerscores")); return {}; })); /* OBJECT */
	add(unary("enableradio", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableradio")); return {}; })); /* BOOL */
	add(unary("skill", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "skill")); return {}; })); /* OBJECT */
	add(unary("settimemultiplier", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settimemultiplier")); return {}; })); /* SCALAR */
	add(unary("waypointtimeoutcurrent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointtimeoutcurrent")); return {}; })); /* GROUP */
	add(unary("magazinecargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinecargo")); return {}; })); /* OBJECT */
	add(unary("ropecut", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropecut")); return {}; })); /* ARRAY */
	add(unary("creatediarylink", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "creatediarylink")); return {}; })); /* ARRAY */
	add(unary("backpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpack")); return {}; })); /* OBJECT */
	add(unary("ctrlmapanimcommit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapanimcommit")); return {}; })); /* CONTROL */
	add(unary("mapanimadd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapanimadd")); return {}; })); /* ARRAY */
	add(unary("surfacenormal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "surfacenormal")); return {}; })); /* ARRAY */
	add(unary("lineintersectswith", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lineintersectswith")); return {}; })); /* ARRAY */
	add(unary("hcremoveallgroups", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcremoveallgroups")); return {}; })); /* OBJECT */
	add(unary("getposworld", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposworld")); return {}; })); /* OBJECT */
	add(unary("showwatch", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showwatch")); return {}; })); /* BOOL */
	add(unary("configsourcemodlist", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "configsourcemodlist")); return {}; })); /* CONFIG */
	add(unary("createtrigger", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createtrigger")); return {}; })); /* ARRAY */
	add(unary("getstamina", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getstamina")); return {}; })); /* OBJECT */
	add(unary("waypointshow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointshow")); return {}; })); /* ARRAY */
	add(unary("ctrltype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrltype")); return {}; })); /* CONTROL */
	add(unary("getmass", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmass")); return {}; })); /* OBJECT */
	add(unary("weaponstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponstate")); return {}; })); /* ARRAY,OBJECT */
	add(unary("lbpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbpictureright")); return {}; })); /* ARRAY */
	add(unary("load", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "load")); return {}; })); /* OBJECT */
	add(unary("loadabs", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadabs")); return {}; })); /* OBJECT */
	add(unary("removeswitchableunit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeswitchableunit")); return {}; })); /* OBJECT */
	add(unary("lnbsort", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsort")); return {}; })); /* ARRAY */
	add(unary("islighton", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "islighton")); return {}; })); /* OBJECT */
	add(unary("simulationenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simulationenabled")); return {}; })); /* OBJECT */
	add(unary("currentmagazinedetail", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentmagazinedetail")); return {}; })); /* OBJECT */
	add(unary("onmapsingleclick", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onmapsingleclick")); return {}; })); /* STRING,CODE */
	add(unary("screenshot", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "screenshot")); return {}; })); /* STRING */
	add(unary("unitaimpositionvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitaimpositionvisual")); return {}; })); /* OBJECT */
	add(unary("actionids", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionids")); return {}; })); /* OBJECT */
	add(unary("everybackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "everybackpack")); return {}; })); /* OBJECT */
	add(unary("asltoatl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "asltoatl")); return {}; })); /* ARRAY */
	add(unary("sethudmovementlevels", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethudmovementlevels")); return {}; })); /* ARRAY */
	add(unary("set3denmodelsvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denmodelsvisible")); return {}; })); /* ARRAY */
	add(unary("currentmuzzle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentmuzzle")); return {}; })); /* OBJECT */
	add(unary("ctrlautoscrollspeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlautoscrollspeed")); return {}; })); /* CONTROL */
	add(unary("currentweaponmode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentweaponmode")); return {}; })); /* OBJECT */
	add(unary("getwingspositionrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getwingspositionrtd")); return {}; })); /* OBJECT */
	add(unary("waypointloitertype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointloitertype")); return {}; })); /* ARRAY */
	add(unary("name", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "name")); return {}; })); /* OBJEC, LOCATIONT */
	add(unary("onbriefinggroup", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onbriefinggroup")); return {}; })); /* STRING */
	add(unary("locationposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "locationposition")); return {}; })); /* LOCATION */
	add(unary("importance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "importance")); return {}; })); /* LOCATION */
	add(unary("captive", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "captive")); return {}; })); /* OBJECT */
	add(unary("isweapondeployed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isweapondeployed")); return {}; })); /* OBJECT */
	add(unary("menushortcut", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menushortcut")); return {}; })); /* ARRAY */
	add(unary("keyimage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "keyimage")); return {}; })); /* SCALAR */
	add(unary("removeallweapons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallweapons")); return {}; })); /* OBJECT */
	add(unary("titleobj", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "titleobj")); return {}; })); /* ARRAY */
	add(unary("lbsort", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsort")); return {}; })); /* CONTROL, ARRAY */
	add(unary("triggertimeoutcurrent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggertimeoutcurrent")); return {}; })); /* OBJECT */
	add(unary("ctrlmodeldirandup", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmodeldirandup")); return {}; })); /* CONTROL */
	add(unary("assignedgunner", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedgunner")); return {}; })); /* OBJECT */
	add(unary("setmouseposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmouseposition")); return {}; })); /* ARRAY */
	add(unary("soldiermagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "soldiermagazines")); return {}; })); /* OBJECT */
	add(unary("endmission", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "endmission")); return {}; })); /* STRING */
	add(unary("leaderboardrequestrowsglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardrequestrowsglobal")); return {}; })); /* ARRAY */
	add(unary("magazinesammo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesammo")); return {}; })); /* OBJECT */
	add(unary("removeuniform", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeuniform")); return {}; })); /* OBJECT */
	add(unary("faction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "faction")); return {}; })); /* OBJECT */
	add(unary("ctrltextsecondary", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrltextsecondary")); return {}; })); /* CONTROL */
	add(unary("clear3deninventory", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clear3deninventory")); return {}; })); /* ARRAY */
	add(unary("lnbpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbpictureright")); return {}; })); /* ARRAY */
	add(unary("servercommandavailable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servercommandavailable")); return {}; })); /* STRING */
	add(unary("geteditormode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "geteditormode")); return {}; })); /* CONTROL */
	add(unary("removeallprimaryweaponitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallprimaryweaponitems")); return {}; })); /* OBJECT */
	add(unary("menuhover", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuhover")); return {}; })); /* CONTROL, SCALAR */
	add(unary("verifysignature", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "verifysignature")); return {}; })); /* STRING */
	add(unary("group", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "group")); return {}; })); /* OBJECT */
	add(unary("allturrets", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allturrets")); return {}; })); /* ARRAY, OBJECT */
	add(unary("restarteditorcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "restarteditorcamera")); return {}; })); /* CONTROL */
	add(unary("camcommitted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camcommitted")); return {}; })); /* OBJECT */
	add(unary("tvtooltip", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvtooltip")); return {}; })); /* ARRAY */
	add(unary("startloadingscreen", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "startloadingscreen")); return {}; })); /* ARRAY */
	add(unary("ctrlsettext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsettext")); return {}; })); /* ARRAY */
	add(unary("enabledynamicsimulation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enabledynamicsimulation")); return {}; })); /* BOOL */
	add(unary("currenttask", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currenttask")); return {}; })); /* OBJECT */
	add(unary("flagside", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flagside")); return {}; })); /* OBJECT */
	add(unary("isinremainscollector", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isinremainscollector")); return {}; })); /* OBJECT */
	add(unary("nearestobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestobject")); return {}; })); /* ARRAY */
	add(unary("magazinesammocargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesammocargo")); return {}; })); /* OBJECT */
	add(unary("setplayable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setplayable")); return {}; })); /* OBJECT */
	add(unary("unlockachievement", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unlockachievement")); return {}; })); /* STRING */
	add(unary("lbsettext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsettext")); return {}; })); /* ARRAY */
	add(unary("isautonomous", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isautonomous")); return {}; })); /* OBJECT */
	add(unary("additempool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "additempool")); return {}; })); /* ARRAY */
	add(unary("getmissionlayerentities", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmissionlayerentities")); return {}; })); /* SCALAR,STRING */
	add(unary("lnbdeleterow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbdeleterow")); return {}; })); /* ARRAY */
	add(unary("dissolveteam", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dissolveteam")); return {}; })); /* STRING */
	add(unary("publicvariableserver", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "publicvariableserver")); return {}; })); /* STRING */
	add(unary("handgunmagazine", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "handgunmagazine")); return {}; })); /* OBJECT */
	add(unary("getoxygenremaining", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getoxygenremaining")); return {}; })); /* OBJECT */
	add(unary("progressposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "progressposition")); return {}; })); /* CONTROL */
	add(unary("tvvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvvalue")); return {}; })); /* ARRAY */
	add(unary("buldozer_loadnewroads", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buldozer_loadnewroads")); return {}; })); /* STRING */
	add(unary("removeallactions", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallactions")); return {}; })); /* OBJECT */
	add(unary("servercommand", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servercommand")); return {}; })); /* STRING */
	add(unary("attachedobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "attachedobject")); return {}; })); /* LOCATION */
	add(unary("everycontainer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "everycontainer")); return {}; })); /* OBJECT */
	add(unary("ctrlautoscrollrewind", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlautoscrollrewind")); return {}; })); /* CONTROL */
	add(unary("stopenginertd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "stopenginertd")); return {}; })); /* OBJECT */
	add(unary("effectivecommander", type::OBJECT, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "effectivecommander")); return {}; }));
	add(unary("lbsetdata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetdata")); return {}; })); /* ARRAY */
	add(unary("isvehiclecargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isvehiclecargo")); return {}; })); /* OBJECT */
	add(unary("agent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "agent")); return {}; })); /* TEAM_MEMBER */
	add(unary("openmap", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "openmap")); return {}; })); /* ARRAY, BOOL */
	add(unary("playsound", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playsound")); return {}; })); /* STRING, ARRAY */
	add(unary("dostop", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dostop")); return {}; })); /* ARRAY,OBJECT */
	add(unary("oneachframe", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "oneachframe")); return {}; })); /* STRING,CODE */
	add(unary("lightdetachobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lightdetachobject")); return {}; })); /* OBJECT */
	add(unary("getpersonuseddlcs", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpersonuseddlcs")); return {}; })); /* OBJECT */
	add(unary("getgroupicons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getgroupicons")); return {}; })); /* GROUP */
	add(unary("getwppos", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getwppos")); return {}; })); /* ARRAY */
	add(unary("setsimulweatherlayers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsimulweatherlayers")); return {}; })); /* SCALAR */
	add(unary("getdescription", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdescription")); return {}; })); /* OBJECT */
	add(unary("ropeendposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeendposition")); return {}; })); /* OBJECT */
	add(unary("text", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "text")); return {}; })); /* STRING, LOCATION */
	add(unary("items", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "items")); return {}; })); /* OBJECT */
	add(unary("showcinemaborder", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showcinemaborder")); return {}; })); /* BOOL */
	add(unary("ctrlautoscrolldelay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlautoscrolldelay")); return {}; })); /* CONTROL */
	add(unary("onpreloadfinished", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onpreloadfinished")); return {}; })); /* STRING,CODE */
	add(unary("nearestlocation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestlocation")); return {}; })); /* ARRAY */
	add(unary("getrepaircargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getrepaircargo")); return {}; })); /* OBJECT */
	add(unary("titlersc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "titlersc")); return {}; })); /* ARRAY */
	add(unary("setcurrentchannel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcurrentchannel")); return {}; })); /* SCALAR */
	add(unary("lbsetpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpictureright")); return {}; })); /* ARRAY */
	add(unary("menusize", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusize")); return {}; })); /* ARRAY */
	add(unary("pitch", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "pitch")); return {}; })); /* OBJECT */
	add(unary("onbriefingplan", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onbriefingplan")); return {}; })); /* STRING */
	add(unary("formattext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formattext")); return {}; })); /* ARRAY */
	add(unary("camerainterest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camerainterest")); return {}; })); /* OBJECT */
	add(unary("removeheadgear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeheadgear")); return {}; })); /* OBJECT */
	//add(unary("side", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "side")); return {}; })); /* LOCATION */
	add(unary("completedfsm", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "completedfsm")); return {}; })); /* SCALAR */
	add(unary("playableslotsnumber", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playableslotsnumber")); return {}; })); /* SIDE */
	add(unary("servercommandexecutable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servercommandexecutable")); return {}; })); /* STRING */
	add(unary("enablesaving", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablesaving")); return {}; })); /* BOOL,ARRAY */
	add(unary("remove3denconnection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remove3denconnection")); return {}; })); /* ARRAY */
	add(unary("queryitemspool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "queryitemspool")); return {}; })); /* STRING */
	add(unary("isformationleader", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isformationleader")); return {}; })); /* OBJECT */
	add(unary("numberofenginesrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "numberofenginesrtd")); return {}; })); /* OBJECT */
	add(unary("setplayerrespawntime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setplayerrespawntime")); return {}; })); /* SCALAR */
	add(unary("preloadsound", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "preloadsound")); return {}; })); /* STRING */
	add(unary("getallsoundcontrollers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getallsoundcontrollers")); return {}; })); /* OBJECT */
	add(unary("setviewdistance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setviewdistance")); return {}; })); /* SCALAR */
	add(unary("magazinesdetail", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesdetail")); return {}; })); /* OBJECT */
	add(unary("ctrlshow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlshow")); return {}; })); /* ARRAY */
	add(unary("waypointattachedobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointattachedobject")); return {}; })); /* ARRAY */
	add(unary("ishidden", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ishidden")); return {}; })); /* OBJECT */
	add(unary("preloadtitleobj", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "preloadtitleobj")); return {}; })); /* ARRAY */
	add(unary("tvcollapseall", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcollapseall")); return {}; })); /* SCALAR, CONTROL */
	add(unary("ctrlparent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlparent")); return {}; })); /* CONTROL */
	add(unary("diag_dynamicsimulationend", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_dynamicsimulationend")); return {}; })); /* STRING */
	add(unary("registeredtasks", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "registeredtasks")); return {}; })); /* TEAM_MEMBER */
	add(unary("forceatpositionrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceatpositionrtd")); return {}; })); /* ARRAY */
	add(unary("actionkeysnamesarray", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionkeysnamesarray")); return {}; })); /* ARRAY,STRING */
	add(unary("titlecut", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "titlecut")); return {}; })); /* ARRAY */
	add(unary("configsourceaddonlist", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "configsourceaddonlist")); return {}; })); /* CONFIG */
	add(unary("menuaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuaction")); return {}; })); /* ARRAY */
	add(unary("disableuserinput", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableuserinput")); return {}; })); /* BOOL */
	add(unary("set3denlinesvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denlinesvisible")); return {}; })); /* ARRAY */
	add(unary("aimpos", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "aimpos")); return {}; })); /* OBJECT */
	add(unary("cancelsimpletaskdestination", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cancelsimpletaskdestination")); return {}; })); /* TASK */
	add(unary("clearweaponcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearweaponcargo")); return {}; })); /* OBJECT */
	add(unary("enableenvironment", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableenvironment")); return {}; })); /* BOOL */
	add(unary("createsimpleobject", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createsimpleobject")); return {}; })); /* ARRAY */
	add(unary("airportside", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "airportside")); return {}; })); /* SCALAR */
	add(unary("assignedvehiclerole", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedvehiclerole")); return {}; })); /* OBJECT */
	add(unary("lnbgetcolumnsposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbgetcolumnsposition")); return {}; })); /* CONTROL, SCALAR */
	add(unary("enableteamswitch", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableteamswitch")); return {}; })); /* BOOL */
	add(unary("waypointforcebehaviour", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointforcebehaviour")); return {}; })); /* ARRAY */
	add(unary("precision", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "precision")); return {}; })); /* OBJECT */
	add(unary("ropes", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropes")); return {}; })); /* OBJECT */
	add(unary("lbcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbcolor")); return {}; })); /* ARRAY */
	add(unary("settrafficdensity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settrafficdensity")); return {}; })); /* ARRAY */
	add(unary("createsoundsource", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createsoundsource")); return {}; })); /* ARRAY */
	add(unary("backpackcontainer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpackcontainer")); return {}; })); /* OBJECT */
	add(unary("vectorupvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectorupvisual")); return {}; })); /* OBJECT */
	add(unary("leaderboardrequestrowsglobalarounduser", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardrequestrowsglobalarounduser")); return {}; })); /* ARRAY */
	add(unary("vectordir", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vectordir")); return {}; })); /* OBJECT */
	add(unary("clearbackpackcargoglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearbackpackcargoglobal")); return {}; })); /* OBJECT */
	add(unary("getdlcusagetime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdlcusagetime")); return {}; })); /* SCALAR */
	add(unary("members", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "members")); return {}; })); /* TEAM_MEMBER */
	add(unary("worldtoscreen", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "worldtoscreen")); return {}; })); /* ARRAY */
	add(unary("teamtype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teamtype")); return {}; })); /* TEAM_MEMBER */
	add(unary("removeallhandgunitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallhandgunitems")); return {}; })); /* OBJECT */
	add(unary("curatoreditingareatype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatoreditingareatype")); return {}; })); /* OBJECT */
	add(unary("magazinesdetailbackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesdetailbackpack")); return {}; })); /* OBJECT */
	add(unary("ctrlmapscale", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapscale")); return {}; })); /* CONTROL */
	add(unary("createdialog", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createdialog")); return {}; })); /* STRING */
	add(unary("currentwaypoint", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentwaypoint")); return {}; })); /* GROUP */
	add(unary("magazinesammofull", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesammofull")); return {}; })); /* OBJECT */
	add(unary("putweaponpool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "putweaponpool")); return {}; })); /* OBJECT */
	add(unary("getobjectdlc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectdlc")); return {}; })); /* OBJECT */
	add(unary("enabledebriefingstats", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enabledebriefingstats")); return {}; })); /* ARRAY */
	add(unary("goto", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "goto")); return {}; })); /* STRING */
	add(unary("deletewaypoint", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletewaypoint")); return {}; })); /* ARRAY */
	add(unary("setshadowdistance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setshadowdistance")); return {}; })); /* SCALAR */
	add(unary("tvsortbyvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsortbyvalue")); return {}; })); /* ARRAY */
	add(unary("lockidentity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockidentity")); return {}; })); /* OBJECT */
	add(unary("score", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "score")); return {}; })); /* OBJECT */
	add(unary("lbsetpicturecolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolor")); return {}; })); /* ARRAY */
	add(unary("nextmenuitemindex", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nextmenuitemindex")); return {}; })); /* CONTROL */
	add(unary("lasertarget", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lasertarget")); return {}; })); /* OBJECT */
	add(unary("unitready", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitready")); return {}; })); /* ARRAY,OBJECT */
	add(unary("showmap", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showmap")); return {}; })); /* BOOL */
	add(unary("isautostartupenabledrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isautostartupenabledrtd")); return {}; })); /* OBJECT */
	add(unary("allmissionobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allmissionobjects")); return {}; })); /* STRING */
	add(unary("getcenterofmass", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcenterofmass")); return {}; })); /* OBJECT */
	add(unary("stance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "stance")); return {}; })); /* OBJECT */
	add(unary("curatorpoints", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorpoints")); return {}; })); /* OBJECT */
	add(unary("lbtextright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbtextright")); return {}; })); /* ARRAY */
	add(unary("getterrainheightasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getterrainheightasl")); return {}; })); /* ARRAY */
	add(unary("triggerattachedvehicle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerattachedvehicle")); return {}; })); /* OBJECT */
	add(unary("rank", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rank")); return {}; })); /* OBJECT */
	add(unary("getrotorbrakertd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getrotorbrakertd")); return {}; })); /* OBJECT */
	add(unary("itemswithmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "itemswithmagazines")); return {}; })); /* OBJECT */
	add(unary("isbleeding", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isbleeding")); return {}; })); /* OBJECT */
	add(unary("isrealtime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isrealtime")); return {}; })); /* CONTROL */
	add(unary("ctrlactivate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlactivate")); return {}; })); /* CONTROL */
	add(unary("processdiarylink", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "processdiarylink")); return {}; })); /* STRING */
	add(unary("lbcolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbcolorright")); return {}; })); /* ARRAY */
	add(unary("menupicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menupicture")); return {}; })); /* ARRAY */
	add(unary("namesound", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "namesound")); return {}; })); /* OBJECT */
	add(unary("locked", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "locked")); return {}; })); /* OBJECT */
	add(unary("ctrlenable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlenable")); return {}; })); /* ARRAY */
	add(unary("getdlcassetsusagebyname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdlcassetsusagebyname")); return {}; })); /* STRING */
	add(unary("clearbackpackcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearbackpackcargo")); return {}; })); /* OBJECT */
	add(unary("cuttext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cuttext")); return {}; })); /* ARRAY */
	add(unary("formationdirection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formationdirection")); return {}; })); /* OBJECT */
	add(unary("preloadtitlersc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "preloadtitlersc")); return {}; })); /* ARRAY */
	add(unary("getweaponcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getweaponcargo")); return {}; })); /* OBJECT */
	add(unary("isabletobreathe", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isabletobreathe")); return {}; })); /* OBJECT */
	add(unary("getassignedcuratorunit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getassignedcuratorunit")); return {}; })); /* OBJECT */
	add(unary("ctrlcommitted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlcommitted")); return {}; })); /* CONTROL */
	add(unary("get3denentity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denentity")); return {}; })); /* SCALAR */
	add(unary("ctrlmapanimdone", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapanimdone")); return {}; })); /* CONTROL */
	add(unary("setgroupiconsvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setgroupiconsvisible")); return {}; })); /* ARRAY */
	add(unary("gearslotammocount", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gearslotammocount")); return {}; })); /* CONTROL */
	add(unary("enginespowerrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enginespowerrtd")); return {}; })); /* OBJECT */
	add(unary("sethorizonparallaxcoef", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sethorizonparallaxcoef")); return {}; })); /* SCALAR */
	add(unary("echo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "echo")); return {}; })); /* STRING */
	add(unary("dynamicsimulationenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dynamicsimulationenabled")); return {}; })); /* OBJECT, GROUP */
	add(unary("hcallgroups", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcallgroups")); return {}; })); /* OBJECT */
	add(unary("setcamshakedefparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcamshakedefparams")); return {}; })); /* ARRAY */
	add(unary("screentoworld", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "screentoworld")); return {}; })); /* ARRAY */
	add(unary("menuenable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuenable")); return {}; })); /* ARRAY */
	add(unary("currentcommand", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentcommand")); return {}; })); /* OBJECT */
	add(unary("sliderposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sliderposition")); return {}; })); /* CONTROL, SCALAR */
	add(unary("unitpos", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitpos")); return {}; })); /* OBJECT */
	add(unary("finddisplay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "finddisplay")); return {}; })); /* SCALAR */
	add(unary("itemcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "itemcargo")); return {}; })); /* OBJECT */
	add(unary("secondaryweaponitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "secondaryweaponitems")); return {}; })); /* OBJECT */
	add(unary("menuvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuvalue")); return {}; })); /* ARRAY */
	add(unary("deleteidentity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deleteidentity")); return {}; })); /* STRING */
	add(unary("getaimingcoef", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getaimingcoef")); return {}; })); /* OBJECT */
	add(unary("breakout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "breakout")); return {}; })); /* STRING */
	add(unary("ropeattachedobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeattachedobjects")); return {}; })); /* OBJECT */
	add(unary("lbsetselectcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetselectcolor")); return {}; })); /* ARRAY */
	add(unary("mineactive", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mineactive")); return {}; })); /* OBJECT */
	add(unary("enablestressdamage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablestressdamage")); return {}; })); /* BOOL */
	add(unary("mapcenteroncamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapcenteroncamera")); return {}; })); /* CONTROL */
	add(unary("lbsetpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicture")); return {}; })); /* ARRAY */
	add(unary("handgunweapon", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "handgunweapon")); return {}; })); /* OBJECT */
	add(unary("activateaddons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "activateaddons")); return {}; })); /* ARRAY */
	add(unary("addmagazinepool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmagazinepool")); return {}; })); /* ARRAY */
	add(unary("synchronizedwaypoints", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizedwaypoints")); return {}; })); /* OBJECT, ARRAY */
	add(unary("vehiclecargoenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vehiclecargoenabled")); return {}; })); /* OBJECT */
	add(unary("save3deninventory", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "save3deninventory")); return {}; })); /* ARRAY */
	add(unary("compilefinal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "compilefinal")); return {}; })); /* STRING */
	add(unary("taskhint", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskhint")); return {}; })); /* ARRAY */
	add(unary("moveout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moveout")); return {}; })); /* OBJECT */
	add(unary("setstatvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setstatvalue")); return {}; })); /* ARRAY */
	add(unary("deleteteam", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deleteteam")); return {}; })); /* TEAM_MEMBER */
	add(unary("get3denactionstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denactionstate")); return {}; })); /* STRING */
	add(unary("createagent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createagent")); return {}; })); /* ARRAY */
	add(unary("importallgroups", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "importallgroups")); return {}; })); /* CONTROL */
	add(unary("assignedvehicle", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedvehicle")); return {}; })); /* OBJECT */
	add(unary("expecteddestination", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "expecteddestination")); return {}; })); /* OBJECT */
	add(unary("goggles", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "goggles")); return {}; })); /* OBJECT */
	add(unary("removeallcuratoraddons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallcuratoraddons")); return {}; })); /* OBJECT */
	add(unary("objectfromnetid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "objectfromnetid")); return {}; })); /* STRING */
	add(unary("ctrlchecked", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlchecked")); return {}; })); /* CONTROL */
	add(unary("tvsettooltip", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsettooltip")); return {}; })); /* ARRAY */
	add(unary("isburning", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isburning")); return {}; })); /* OBJECT */
	add(unary("getobjectmaterials", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectmaterials")); return {}; })); /* OBJECT */
	add(unary("getplayeruid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getplayeruid")); return {}; })); /* OBJECT */
	add(unary("binocular", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "binocular")); return {}; })); /* OBJECT */
	add(unary("getweaponsway", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getweaponsway")); return {}; })); /* OBJECT */
	add(unary("collect3denhistory", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "collect3denhistory")); return {}; })); /* CODE */
	add(unary("handgunitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "handgunitems")); return {}; })); /* OBJECT */
	add(unary("removeallcuratoreditingareas", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallcuratoreditingareas")); return {}; })); /* OBJECT */
	add(unary("skiptime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "skiptime")); return {}; })); /* SCALAR */
	add(unary("getpos", type::LOCATION, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpos")); return {}; })); /* LOCATION */
	add(unary("curatorcameraarea", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorcameraarea")); return {}; })); /* OBJECT */
	add(unary("enableaudiofeature", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableaudiofeature")); return {}; })); /* ARRAY */
	add(unary("publicvariable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "publicvariable")); return {}; })); /* STRING */
	add(unary("create3dencomposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "create3dencomposition")); return {}; })); /* ARRAY */
	add(unary("showscoretable", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showscoretable")); return {}; })); /* SCALAR */
	add(unary("backpackcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpackcargo")); return {}; })); /* OBJECT */
	add(unary("getobjecttextures", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjecttextures")); return {}; })); /* OBJECT */
	add(unary("vestmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vestmagazines")); return {}; })); /* OBJECT */
	add(unary("curatoraddons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatoraddons")); return {}; })); /* OBJECT */
	add(unary("secondaryweapon", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "secondaryweapon")); return {}; })); /* OBJECT */
	add(unary("get3denlayerentities", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denlayerentities")); return {}; })); /* SCALAR */
	add(unary("getposvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposvisual")); return {}; })); /* OBJECT */
	add(unary("deletecollection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletecollection")); return {}; })); /* OBJECT */
	add(unary("triggerstatements", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggerstatements")); return {}; })); /* OBJECT */
	add(unary("priority", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "priority")); return {}; })); /* TASK */
	add(unary("menusetpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetpicture")); return {}; })); /* ARRAY */
	add(unary("setlocalwindparams", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setlocalwindparams")); return {}; })); /* ARRAY */
	add(unary("lbvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbvalue")); return {}; })); /* ARRAY */
	add(unary("createcenter", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createcenter")); return {}; })); /* SIDE */
	add(unary("menuexpand", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuexpand")); return {}; })); /* ARRAY */
	add(unary("getposaslw", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposaslw")); return {}; })); /* OBJECT */
	add(unary("lineintersectssurfaces", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lineintersectssurfaces")); return {}; })); /* ARRAY */
	add(unary("ongroupiconoverleave", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ongroupiconoverleave")); return {}; })); /* STRING,CODE */
	add(unary("camdestroy", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camdestroy")); return {}; })); /* OBJECT */
	add(unary("curatorwaypointcost", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorwaypointcost")); return {}; })); /* OBJECT */
	add(unary("slidersetposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetposition")); return {}; })); /* ARRAY */
	add(unary("ismarkedforcollection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ismarkedforcollection")); return {}; })); /* OBJECT */
	add(unary("getassignedcuratorlogic", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getassignedcuratorlogic")); return {}; })); /* OBJECT */
	add(unary("triggeractivation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "triggeractivation")); return {}; })); /* OBJECT */
	add(unary("ctrldelete", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrldelete")); return {}; })); /* CONTROL */
	add(unary("parsetext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "parsetext")); return {}; })); /* STRING */
	add(unary("teammember", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teammember")); return {}; })); /* OBJECT */
	add(unary("actionkeys", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "actionkeys")); return {}; })); /* STRING */
	add(unary("waypointbehaviour", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointbehaviour")); return {}; })); /* ARRAY */
	add(unary("preloadcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "preloadcamera")); return {}; })); /* ARRAY */
	add(unary("deletecenter", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletecenter")); return {}; })); /* SIDE */
	add(unary("remoteexeccall", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remoteexeccall")); return {}; })); /* ARRAY */
	add(unary("setstaminascheme", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setstaminascheme")); return {}; })); /* STRING */
	add(unary("rectangular", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rectangular")); return {}; })); /* LOCATION */
	add(unary("move3dencamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "move3dencamera")); return {}; })); /* ARRAY */
	add(unary("addmusiceventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmusiceventhandler")); return {}; })); /* ARRAY */
	add(unary("resetsubgroupdirection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "resetsubgroupdirection")); return {}; })); /* OBJECT */
	add(unary("lognetworkterminate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lognetworkterminate")); return {}; })); /* SCALAR */
	add(unary("channelenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "channelenabled")); return {}; })); /* SCALAR */
	add(unary("lnbsetpictureright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpictureright")); return {}; })); /* ARRAY */
	add(unary("cleargroupicons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cleargroupicons")); return {}; })); /* GROUP */
	add(unary("taskdestination", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskdestination")); return {}; })); /* TASK */
	add(unary("taskalwaysvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskalwaysvisible")); return {}; })); /* TASK */
	add(unary("vestitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vestitems")); return {}; })); /* OBJECT */
	add(unary("switchcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchcamera")); return {}; })); /* OBJECT */
	add(unary("ppeffectcommitted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectcommitted")); return {}; })); /* STRING, SCALAR */
	add(unary("buttonsetaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buttonsetaction")); return {}; })); /* ARRAY */
	add(unary("menudelete", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menudelete")); return {}; })); /* ARRAY */
	add(unary("fromeditor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fromeditor")); return {}; })); /* TEAM_MEMBER */
	add(unary("waypointsenableduav", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointsenableduav")); return {}; })); /* OBJECT */
	add(unary("tvcollapse", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcollapse")); return {}; })); /* ARRAY */
	add(unary("lnbcolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbcolorright")); return {}; })); /* ARRAY */
	add(unary("airdensityrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "airdensityrtd")); return {}; })); /* SCALAR */
	add(unary("keyname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "keyname")); return {}; })); /* SCALAR */
	add(unary("closedialog", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "closedialog")); return {}; })); /* SCALAR */
	add(unary("lnbsetcolumnspos", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolumnspos")); return {}; })); /* ARRAY */
	add(unary("commandstop", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandstop")); return {}; })); /* ARRAY,OBJECT */
	add(unary("list", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "list")); return {}; })); /* OBJECT */
	add(unary("hintc", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hintc")); return {}; })); /* STRING */
	add(unary("detach", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "detach")); return {}; })); /* OBJECT */
	add(unary("needreload", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "needreload")); return {}; })); /* OBJECT */
	add(unary("waypointdescription", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointdescription")); return {}; })); /* ARRAY */
	add(unary("image", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "image")); return {}; })); /* STRING */
	add(unary("dynamicsimulationdistancemult", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dynamicsimulationdistancemult")); return {}; })); /* STRING */
	add(unary("tvsetcursel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetcursel")); return {}; })); /* ARRAY */
	add(unary("tvclear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvclear")); return {}; })); /* SCALAR, CONTROL */
	add(unary("isnull", type::SCRIPT, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("isnull", type::CONTROL, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("isnull", type::DISPLAY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("isnull", type::NetObject, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("isnull", type::TASK, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("isnull", type::LOCATION, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isnull")); return {}; })); /* SCRIPT, CONTROL, DISPLAY, NetObject, TASK, LOCATION */
	add(unary("setacctime", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setacctime")); return {}; })); /* SCALAR */
	add(unary("remove3denlayer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remove3denlayer")); return {}; })); /* SCALAR */
	add(unary("removebackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removebackpack")); return {}; })); /* OBJECT */
	add(unary("hideobjectglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hideobjectglobal")); return {}; })); /* OBJECT */
	add(unary("lnbcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbcolor")); return {}; })); /* ARRAY */
	add(unary("lnbcurselrow", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbcurselrow")); return {}; })); /* CONTROL, SCALAR */
	add(unary("getbackpackcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getbackpackcargo")); return {}; })); /* OBJECT */
	add(unary("getshotparents", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getshotparents")); return {}; })); /* OBJECT */
	add(unary("curatorregisteredobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorregisteredobjects")); return {}; })); /* OBJECT */
	add(unary("ctrlenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlenabled")); return {}; })); /* CONTROL, SCALAR */
	add(unary("removeallmusiceventhandlers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallmusiceventhandlers")); return {}; })); /* STRING */
	add(unary("playersnumber", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playersnumber")); return {}; })); /* SIDE */
	add(unary("onplayerconnected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onplayerconnected")); return {}; })); /* STRING,CODE */
	add(unary("menutext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menutext")); return {}; })); /* ARRAY */
	add(unary("lnbaddcolumn", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbaddcolumn")); return {}; })); /* ARRAY */
	add(unary("menushortcuttext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menushortcuttext")); return {}; })); /* ARRAY */
	add(unary("mapgridposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapgridposition")); return {}; })); /* ARRAY,OBJECT */
	add(unary("ropeattachenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropeattachenabled")); return {}; })); /* OBJECT */
	add(unary("firstbackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "firstbackpack")); return {}; })); /* OBJECT */
	add(unary("lnbsetpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicture")); return {}; })); /* ARRAY */
	add(unary("getitemcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getitemcargo")); return {}; })); /* OBJECT */
	add(unary("tvsetvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetvalue")); return {}; })); /* ARRAY */
	add(unary("removemusiceventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removemusiceventhandler")); return {}; })); /* ARRAY */
	add(unary("getburningvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getburningvalue")); return {}; })); /* OBJECT */
	add(unary("formation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formation")); return {}; })); /* OBJECT,GROUP,TEAM_MEMBER */
	add(unary("simulclouddensity", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simulclouddensity")); return {}; })); /* ARRAY */
	add(unary("localize", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "localize")); return {}; })); /* STRING */
	add(unary("loadbackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadbackpack")); return {}; })); /* OBJECT */
	add(unary("unassignteam", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unassignteam")); return {}; })); /* OBJECT */
	add(unary("removeallownedmines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallownedmines")); return {}; })); /* OBJECT */
	add(unary("menudata", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menudata")); return {}; })); /* ARRAY */
	add(unary("ropelength", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropelength")); return {}; })); /* OBJECT */
	add(unary("getanimspeedcoef", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getanimspeedcoef")); return {}; })); /* OBJECT */
	add(unary("fullcrew", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fullcrew")); return {}; })); /* OBJECT,ARRAY */
	add(unary("formationmembers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formationmembers")); return {}; })); /* OBJECT */
	add(unary("addcamshake", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addcamshake")); return {}; })); /* ARRAY */
	add(unary("getcontainermaxload", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getcontainermaxload")); return {}; })); /* STRING */
	add(unary("type", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "type")); return {}; })); /* TASK, LOCATION */
	add(unary("lnbsetpicturecolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolor")); return {}; })); /* ARRAY */
	add(unary("visibleposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visibleposition")); return {}; })); /* OBJECT */
	add(unary("getpilotcameradirection", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpilotcameradirection")); return {}; })); /* OBJECT */
	add(unary("speedmode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "speedmode")); return {}; })); /* OBJECT,GROUP */
	add(unary("vestcontainer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vestcontainer")); return {}; })); /* OBJECT */
	add(unary("currenttasks", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currenttasks")); return {}; })); /* TEAM_MEMBER */
	add(unary("showhud", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showhud")); return {}; })); /* BOOL, ARRAY */
	add(unary("getposasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposasl")); return {}; })); /* OBJECT */
	add(unary("showcuratorcompass", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showcuratorcompass")); return {}; })); /* BOOL */
	add(unary("forcemap", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcemap")); return {}; })); /* BOOL */
	add(unary("inflamed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "inflamed")); return {}; })); /* OBJECT */
	add(unary("waypoints", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypoints")); return {}; })); /* OBJECT,GROUP */
	add(unary("menusetaction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetaction")); return {}; })); /* ARRAY */
	add(unary("weaponinertia", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weaponinertia")); return {}; })); /* OBJECT */
	add(unary("haspilotcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "haspilotcamera")); return {}; })); /* OBJECT */
	add(unary("isforcedwalk", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isforcedwalk")); return {}; })); /* OBJECT */
	add(unary("currentvisionmode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentvisionmode")); return {}; })); /* OBJECT */
	add(unary("enablecaustics", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablecaustics")); return {}; })); /* BOOL */
	add(unary("deactivatekey", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deactivatekey")); return {}; })); /* STRING */
	add(unary("setdate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdate")); return {}; })); /* ARRAY */
	add(unary("direction", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "direction")); return {}; })); /* OBJECT,LOCATION, */
	add(unary("dynamicsimulationdistance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dynamicsimulationdistance")); return {}; })); /* STRING */
	add(unary("ppeffectenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ppeffectenabled")); return {}; })); /* SCALAR */
	add(unary("getdlcs", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdlcs")); return {}; })); /* SCALAR */
	add(unary("getsuppression", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getsuppression")); return {}; })); /* OBJECT */
	add(unary("lbsetpicturecolorselected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetpicturecolorselected")); return {}; })); /* ARRAY */
	add(unary("settrafficgap", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "settrafficgap")); return {}; })); /* ARRAY */
	add(unary("camusenvg", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "camusenvg")); return {}; })); /* BOOL */
	add(unary("resources", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "resources")); return {}; })); /* TEAM_MEMBER */
	add(unary("hintsilent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hintsilent")); return {}; })); /* STRING,TEXT */
	add(unary("assignedcommander", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedcommander")); return {}; })); /* OBJECT */
	add(unary("taskchildren", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskchildren")); return {}; })); /* TASK */
	add(unary("updateobjecttree", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "updateobjecttree")); return {}; })); /* CONTROL */
	add(unary("showcompass", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showcompass")); return {}; })); /* BOOL */
	add(unary("lnbpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbpicture")); return {}; })); /* ARRAY */
	add(unary("waypointname", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointname")); return {}; })); /* ARRAY */
	add(unary("deletesite", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletesite")); return {}; })); /* OBJECT */
	add(unary("nearestbuilding", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestbuilding")); return {}; })); /* OBJECT,ARRAY */
	add(unary("addforcegeneratorrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addforcegeneratorrtd")); return {}; })); /* ARRAY */
	add(unary("forcegeneratorrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcegeneratorrtd")); return {}; })); /* SCALAR */
	add(unary("getposatlvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposatlvisual")); return {}; })); /* OBJECT */
	add(unary("getallenvsoundcontrollers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getallenvsoundcontrollers")); return {}; })); /* ARRAY */
	add(unary("clearitemcargoglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearitemcargoglobal")); return {}; })); /* OBJECT */
	add(unary("getmissionconfig", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmissionconfig")); return {}; })); /* STRING */
	add(unary("ctrltextheight", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrltextheight")); return {}; })); /* CONTROL */
	add(unary("removegoggles", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removegoggles")); return {}; })); /* OBJECT */
	add(unary("showsubtitles", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showsubtitles")); return {}; })); /* BOOL */
	add(unary("getplayerchannel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getplayerchannel")); return {}; })); /* OBJECT */
	add(unary("menuadd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuadd")); return {}; })); /* ARRAY */
	add(unary("clearitemcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearitemcargo")); return {}; })); /* OBJECT */
	add(unary("sendudpmessage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sendudpmessage")); return {}; })); /* ARRAY */
	add(unary("checkaifeature", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "checkaifeature")); return {}; })); /* STRING */
	add(unary("uavcontrol", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uavcontrol")); return {}; })); /* OBJECT */
	add(unary("iswalking", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "iswalking")); return {}; })); /* OBJECT */
	add(unary("tasktype", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tasktype")); return {}; })); /* TASK */
	add(unary("flag", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "flag")); return {}; })); /* OBJECT */
	add(unary("composetext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "composetext")); return {}; })); /* ARRAY */
	add(unary("formleader", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formleader")); return {}; })); /* OBJECT */
	add(unary("stopped", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "stopped")); return {}; })); /* OBJECT */
	add(unary("clearallitemsfrombackpack", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearallitemsfrombackpack")); return {}; })); /* OBJECT */
	add(unary("leaderboardgetrows", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboardgetrows")); return {}; })); /* STRING */
	add(unary("nearestlocations", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestlocations")); return {}; })); /* ARRAY */
	add(unary("addmissioneventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "addmissioneventhandler")); return {}; })); /* ARRAY */
	add(unary("ongroupiconclick", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ongroupiconclick")); return {}; })); /* STRING,CODE */
	add(unary("hmd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hmd")); return {}; })); /* OBJECT */
	add(unary("setobjectviewdistance", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setobjectviewdistance")); return {}; })); /* SCALAR,ARRAY */
	add(unary("remove3deneventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "remove3deneventhandler")); return {}; })); /* ARRAY */
	add(unary("waypointscript", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointscript")); return {}; })); /* ARRAY */
	add(unary("lnbtextright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbtextright")); return {}; })); /* ARRAY */
	add(unary("magazinesdetailuniform", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesdetailuniform")); return {}; })); /* OBJECT */
	add(unary("tvsetpicturerightcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvsetpicturerightcolor")); return {}; })); /* ARRAY */
	add(unary("hintcadet", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hintcadet")); return {}; })); /* STRING,TEXT */
	add(unary("set3dengrid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3dengrid")); return {}; })); /* ARRAY */
	add(unary("roadsconnectedto", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "roadsconnectedto")); return {}; })); /* OBJECT */
	add(unary("lbcursel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbcursel")); return {}; })); /* CONTROL,SCALAR */
	add(unary("canfire", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "canfire")); return {}; })); /* OBJECT */
	add(unary("creategeardialog", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "creategeardialog")); return {}; })); /* ARRAY */
	add(unary("slidersetspeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slidersetspeed")); return {}; })); /* ARRAY */
	add(unary("sendaumessage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sendaumessage")); return {}; })); /* ARRAY */
	add(unary("iskeyactive", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "iskeyactive")); return {}; })); /* STRING */
	add(unary("isobjecthidden", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isobjecthidden")); return {}; })); /* OBJECT */
	add(unary("configsourcemod", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "configsourcemod")); return {}; })); /* CONFIG */
	add(unary("lnbvalue", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbvalue")); return {}; })); /* ARRAY */
	add(unary("tvpicture", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvpicture")); return {}; })); /* ARRAY */
	add(unary("underwater", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "underwater")); return {}; })); /* OBJECT */
	add(unary("showwaypoints", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showwaypoints")); return {}; })); /* BOOL */
	add(unary("sliderspeed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sliderspeed")); return {}; })); /* CONTROL,SCALAR */
	add(unary("setmusiceventhandler", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setmusiceventhandler")); return {}; })); /* ARRAY */
	add(unary("unitaimposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitaimposition")); return {}; })); /* OBJECT */
	add(unary("lnbsize", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsize")); return {}; })); /* CONTROL,SCALAR */
	add(unary("ropecreate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ropecreate")); return {}; })); /* ARRAY */
	add(unary("deletestatus", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "deletestatus")); return {}; })); /* STRING */
	add(unary("lnbsetpicturecolorselected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorselected")); return {}; })); /* ARRAY */
	add(unary("morale", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "morale")); return {}; })); /* OBJECT */
	add(unary("ctrlfade", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlfade")); return {}; })); /* CONTROL */
	add(unary("selectplayer", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectplayer")); return {}; })); /* OBJECT */
	add(unary("menusetcheck", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusetcheck")); return {}; })); /* ARRAY */
	add(unary("createlocation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createlocation")); return {}; })); /* ARRAY */
	add(unary("menuclear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menuclear")); return {}; })); /* CONTROL,SCALAR */
	add(unary("failmission", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "failmission")); return {}; })); /* STRING */
	add(unary("lnbsetcolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolorright")); return {}; })); /* ARRAY */
	add(unary("setcompassoscillation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setcompassoscillation")); return {}; })); /* ARRAY */
	add(unary("iscollisionlighton", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "iscollisionlighton")); return {}; })); /* OBJECT */
	add(unary("removeallmissioneventhandlers", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallmissioneventhandlers")); return {}; })); /* STRING */
	add(unary("ctrlvisible", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlvisible")); return {}; })); /* SCALAR */
	add(unary("formationtask", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "formationtask")); return {}; })); /* OBJECT */
	add(unary("ismanualfire", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ismanualfire")); return {}; })); /* OBJECT */
	add(unary("getpilotcamerarotation", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpilotcamerarotation")); return {}; })); /* OBJECT */
	add(unary("opendlcpage", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "opendlcpage")); return {}; })); /* SCALAR */
	add(unary("wingsforcesrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "wingsforcesrtd")); return {}; })); /* OBJECT */
	add(unary("setdefaultcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdefaultcamera")); return {}; })); /* ARRAY */
	add(unary("removefromremainscollector", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removefromremainscollector")); return {}; })); /* ARRAY */
	add(unary("playscriptedmission", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playscriptedmission")); return {}; })); /* ARRAY */
	add(unary("lnbsetcolor", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetcolor")); return {}; })); /* ARRAY */
	add(unary("onteamswitch", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onteamswitch")); return {}; })); /* STRING,CODE */
	add(unary("lineintersects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lineintersects")); return {}; })); /* ARRAY */
	add(unary("isuavconnected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isuavconnected")); return {}; })); /* OBJECT */
	add(unary("ctrlposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlposition")); return {}; })); /* CONTROL */
	add(unary("lbsize", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsize")); return {}; })); /* CONTROL, SCALAR */
	add(unary("getunitloadout", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getunitloadout")); return {}; })); /* ARRAY,OBJECT,CONFIG,STRING */
	add(unary("roadat", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "roadat")); return {}; })); /* ARRAY,OBJECT */
	add(unary("createguardedpoint", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createguardedpoint")); return {}; })); /* ARRAY */
	add(unary("commitoverlay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commitoverlay")); return {}; })); /* CONTROL */
	add(unary("currentweapon", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentweapon")); return {}; })); /* OBJECT */
	add(unary("getdirvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdirvisual")); return {}; })); /* OBJECT */
	add(unary("ctrlmapmouseover", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapmouseover")); return {}; })); /* CONTROL */
	add(unary("drawline3d", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "drawline3d")); return {}; })); /* ARRAY */
	add(unary("ctrlmapanimclear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlmapanimclear")); return {}; })); /* CONTROL */
	add(unary("leaderboarddeinit", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "leaderboarddeinit")); return {}; })); /* STRING */
	add(unary("clearoverlay", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearoverlay")); return {}; })); /* CONTROL */
	add(unary("enginesrpmrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enginesrpmrtd")); return {}; })); /* OBJECT */
	add(unary("datetonumber", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "datetonumber")); return {}; })); /* ARRAY */
	add(unary("setsystemofunits", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setsystemofunits")); return {}; })); /* SCALAR */
	add(unary("breakto", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "breakto")); return {}; })); /* STRING */
	add(unary("difficultyenabled", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "difficultyenabled")); return {}; })); /* STRING */
	add(unary("clearmagazinecargoglobal", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearmagazinecargoglobal")); return {}; })); /* OBJECT */
	add(unary("synchronizedobjects", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "synchronizedobjects")); return {}; })); /* OBJECT */
	add(unary("tg", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tg")); return {}; })); /* SCALAR,NaN */
	add(unary("useaisteeringcomponent", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "useaisteeringcomponent")); return {}; })); /* BOOL */
	add(unary("lbsetcursel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbsetcursel")); return {}; })); /* ARRAY */
	add(unary("setarmorypoints", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setarmorypoints")); return {}; })); /* SCALAR */
	add(unary("weightrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "weightrtd")); return {}; })); /* OBJECT */
	add(unary("loadvest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadvest")); return {}; })); /* OBJECT */
	add(unary("gearidcammocount", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gearidcammocount")); return {}; })); /* SCALAR */
	add(unary("nearestlocationwithdubbing", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nearestlocationwithdubbing")); return {}; })); /* ARRAY */
	add(unary("createmine", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createmine")); return {}; })); /* ARRAY */
	add(unary("lnbsetpicturecolorright", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lnbsetpicturecolorright")); return {}; })); /* ARRAY */
	add(unary("getposaslvisual", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getposaslvisual")); return {}; })); /* OBJECT */
	add(unary("eyepos", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "eyepos")); return {}; })); /* OBJECT */
	add(unary("removeallitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "removeallitems")); return {}; })); /* OBJECT */
	add(unary("createvehiclecrew", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "createvehiclecrew")); return {}; })); /* OBJECT */
	add(unary("uniformmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "uniformmagazines")); return {}; })); /* OBJECT */
	add(unary("enablecamshake", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enablecamshake")); return {}; })); /* BOOL */
	add(unary("tvcursel", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tvcursel")); return {}; })); /* SCALAR,CONTROL */
	add(unary("setdetailmapblendpars", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "setdetailmapblendpars")); return {}; })); /* ARRAY */
	add(unary("onbriefingnotes", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "onbriefingnotes")); return {}; })); /* STRING */
	add(unary("backpackitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "backpackitems")); return {}; })); /* OBJECT */
	add(unary("magazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazines")); return {}; })); /* OBJECT */
	add(unary("waypointcombatmode", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waypointcombatmode")); return {}; })); /* ARRAY */
	add(unary("enginesisonrtd", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enginesisonrtd")); return {}; })); /* OBJECT */
	add(unary("queryweaponpool", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "queryweaponpool")); return {}; })); /* STRING */
	add(unary("didjipowner", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "didjipowner")); return {}; })); /* OBJECT */
	add(unary("primaryweaponitems", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "primaryweaponitems")); return {}; })); /* OBJECT */
	add(unary("visiblepositionasl", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblepositionasl")); return {}; })); /* OBJECT */
	add(unary("set3denselected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "set3denselected")); return {}; })); /* ARRAY */
	add(unary("get3denselected", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denselected")); return {}; })); /* STRING */
	add(unary("lightison", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lightison")); return {}; })); /* OBJECT */
	add(unary("assignedcargo", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "assignedcargo")); return {}; })); /* OBJECT */
	add(unary("currentmagazine", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentmagazine")); return {}; })); /* OBJECT */
	add(unary("taskstate", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "taskstate")); return {}; })); /* TASK */
	add(unary("magazinesdetailvest", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "magazinesdetailvest")); return {}; })); /* OBJECT */
	add(unary("not", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "not")); return {}; })); /* BOOL */
	add(unary("lbclear", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lbclear")); return {}; })); /* CONTROL,SCALAR */
	add(unary("getpilotcameraposition", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpilotcameraposition")); return {}; })); /* OBJECT */
	add(unary("forcerespawn", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcerespawn")); return {}; })); /* OBJECT */
	add(unary("titletext", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "titletext")); return {}; })); /* ARRAY */
	add(unary("getconnecteduav", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getconnecteduav")); return {}; })); /* OBJECT */
	add(unary("geteditorcamera", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "geteditorcamera")); return {}; })); /* CONTROL */
	add(unary("menusort", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "menusort")); return {}; })); /* ARRAY */
	add(unary("get3denentityid", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denentityid")); return {}; })); /* ANY */
	add(unary("lockeddriver", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lockeddriver")); return {}; })); /* OBJECT */
	add(unary("ctrlsetfocus", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ctrlsetfocus")); return {}; })); /* CONTROL */
	add(unary("unitaddons", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "unitaddons")); return {}; })); /* STRING */
	add(unary("parsesimplearray", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "parsesimplearray")); return {}; })); /* STRING */
	add(unary("getpylonmagazines", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getpylonmagazines")); return {}; })); /* STRING */
	add(unary("selectrandomweighted", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectrandomweighted")); return {}; })); /* STRING */
	add(unary("isdamageallowed", type::ANY, "", [](virtualmachine* vm, value::cref r) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isdamageallowed")); return {}; })); /* STRING */



	add(nular("safezonex", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezonex")); return {}; }));
	add(nular("clearmagazinepool", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearmagazinepool")); return {}; }));
	add(nular("slingloadassistantshown", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "slingloadassistantshown")); return {}; }));
	add(nular("windstr", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "windstr")); return {}; }));
	add(nular("isinstructorfigureenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isinstructorfigureenabled")); return {}; }));
	add(nular("safezoney", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezoney")); return {}; }));
	add(nular("getclientstatenumber", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getclientstatenumber")); return {}; }));
	add(nular("getclientstate", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getclientstate")); return {}; }));
	add(nular("date", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "date")); return {}; }));
	add(nular("getelevationoffset", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getelevationoffset")); return {}; }));
	add(nular("current3denoperation", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "current3denoperation")); return {}; }));
	add(nular("getterraingrid", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getterraingrid")); return {}; }));
	add(nular("exit", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "exit")); return {}; }));
	add(nular("mapanimclear", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapanimclear")); return {}; }));
	add(nular("missiondifficulty", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "missiondifficulty")); return {}; }));
	add(nular("nextweatherchange", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "nextweatherchange")); return {}; }));
	add(nular("allsites", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allsites")); return {}; }));
	add(nular("teamswitchenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teamswitchenabled")); return {}; }));
	add(nular("visiblescoretable", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblescoretable")); return {}; }));
	add(nular("is3denmultiplayer", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "is3denmultiplayer")); return {}; }));
	add(nular("worldname", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "worldname")); return {}; }));
	add(nular("ismultiplayersolo", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ismultiplayersolo")); return {}; }));
	add(nular("isremoteexecuted", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isremoteexecuted")); return {}; }));
	add(nular("curatorcamera", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorcamera")); return {}; }));
	add(nular("displaynull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "displaynull")); return {}; }));
	add(nular("diag_frameno", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_frameno")); return {}; }));
	add(nular("currentnamespace", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentnamespace")); return {}; }));
	add(nular("armorypoints", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "armorypoints")); return {}; }));
	add(nular("controlnull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "controlnull")); return {}; }));
	add(nular("markasfinishedonsteam", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "markasfinishedonsteam")); return {}; }));
	add(nular("visiblewatch", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblewatch")); return {}; }));
	add(nular("estimatedendservertime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "estimatedendservertime")); return {}; }));
	add(nular("diag_activemissionfsms", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_activemissionfsms")); return {}; }));
	add(nular("hudmovementlevels", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hudmovementlevels")); return {}; }));
	add(nular("rainbow", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rainbow")); return {}; }));
	add(nular("servertime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servertime")); return {}; }));
	add(nular("teams", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teams")); return {}; }));
	add(nular("all3denentities", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "all3denentities")); return {}; }));
	add(nular("librarycredits", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "librarycredits")); return {}; }));
	add(nular("shownwarrant", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownwarrant")); return {}; }));
	add(nular("allmines", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allmines")); return {}; }));
	add(nular("getshadowdistance", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getshadowdistance")); return {}; }));
	add(nular("alldisplays", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "alldisplays")); return {}; }));
	add(nular("isautotest", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isautotest")); return {}; }));
	add(nular("viewdistance", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "viewdistance")); return {}; }));
	add(nular("sideambientlife", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sideambientlife")); return {}; }));
	add(nular("worldsize", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "worldsize")); return {}; }));
	add(nular("rain", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "rain")); return {}; }));
	add(nular("didjip", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "didjip")); return {}; }));
	add(nular("missionstart", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "missionstart")); return {}; }));
	add(nular("airdensitycurvertd", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "airdensitycurvertd")); return {}; }));
	add(nular("sunormoon", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "sunormoon")); return {}; }));
	add(nular("safezonewabs", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezonewabs")); return {}; }));
	add(nular("profilename", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "profilename")); return {}; }));
	add(nular("difficultyenabledrtd", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "difficultyenabledrtd")); return {}; }));
	add(nular("savegame", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "savegame")); return {}; }));
	add(nular("hasinterface", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hasinterface")); return {}; }));
	add(nular("clearitempool", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearitempool")); return {}; }));
	add(nular("runinitscript", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "runinitscript")); return {}; }));
	add(nular("getartillerycomputersettings", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getartillerycomputersettings")); return {}; }));
	add(nular("visiblemap", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblemap")); return {}; }));
	add(nular("forceweatherchange", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceweatherchange")); return {}; }));
	add(nular("shownchat", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownchat")); return {}; }));
	add(nular("mapanimdone", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapanimdone")); return {}; }));
	add(nular("resetcamshake", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "resetcamshake")); return {}; }));
	add(nular("showncompass", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showncompass")); return {}; }));
	add(nular("winddir", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "winddir")); return {}; }));
	add(nular("currentchannel", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "currentchannel")); return {}; }));
	add(nular("gettotaldlcusagetime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gettotaldlcusagetime")); return {}; }));
	add(nular("get3denlinesvisible", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denlinesvisible")); return {}; }));
	add(nular("endloadingscreen", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "endloadingscreen")); return {}; }));
	add(nular("profilenamesteam", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "profilenamesteam")); return {}; }));
	add(nular("playableunits", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playableunits")); return {}; }));
	add(nular("cheatsenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cheatsenabled")); return {}; }));
	add(nular("opencuratorinterface", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "opencuratorinterface")); return {}; }));
	add(nular("gusts", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "gusts")); return {}; }));
	add(nular("overcastforecast", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "overcastforecast")); return {}; }));
	add(nular("commandingmenu", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "commandingmenu")); return {}; }));
	add(nular("distributionregion", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "distributionregion")); return {}; }));
	add(nular("windrtd", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "windrtd")); return {}; }));
	add(nular("allcurators", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allcurators")); return {}; }));
	add(nular("benchmark", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "benchmark")); return {}; }));
	add(nular("getmissiondlcs", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmissiondlcs")); return {}; }));
	add(nular("istuthintsenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "istuthintsenabled")); return {}; }));
	add(nular("shownartillerycomputer", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownartillerycomputer")); return {}; }));
	add(nular("scriptnull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "scriptnull")); return {}; }));
	add(nular("isfilepatchingenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isfilepatchingenabled")); return {}; }));
	add(nular("missionname", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "missionname")); return {}; }));
	add(nular("clearweaponpool", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearweaponpool")); return {}; }));
	add(nular("issteammission", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "issteammission")); return {}; }));
	add(nular("linebreak", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "linebreak")); return {}; }));
	add(nular("language", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "language")); return {}; }));
	add(nular("diag_fps", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_fps")); return {}; }));
	add(nular("acctime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "acctime")); return {}; }));
	add(nular("enableenddialog", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "enableenddialog")); return {}; }));
	add(nular("safezoneh", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezoneh")); return {}; }));
	add(nular("allunitsuav", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allunitsuav")); return {}; }));
	add(nular("shownradio", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownradio")); return {}; }));
	add(nular("allplayers", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allplayers")); return {}; }));
	add(nular("clearforcesrtd", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearforcesrtd")); return {}; }));
	add(nular("clearradio", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clearradio")); return {}; }));
	add(nular("disabledebriefingstats", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disabledebriefingstats")); return {}; }));
	add(nular("logentities", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "logentities")); return {}; }));
	add(nular("visiblecompass", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblecompass")); return {}; }));
	add(nular("locationnull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "locationnull")); return {}; }));
	add(nular("shownwatch", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownwatch")); return {}; }));
	add(nular("playerside", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playerside")); return {}; }));
	add(nular("lightnings", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "lightnings")); return {}; }));
	add(nular("simulweathersync", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "simulweathersync")); return {}; }));
	add(nular("shownmap", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownmap")); return {}; }));
	add(nular("shownpad", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownpad")); return {}; }));
	add(nular("clientowner", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "clientowner")); return {}; }));
	add(nular("getobjectviewdistance", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getobjectviewdistance")); return {}; }));
	add(nular("overcast", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "overcast")); return {}; }));
	add(nular("safezonexabs", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezonexabs")); return {}; }));
	add(nular("forceend", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forceend")); return {}; }));
	add(nular("diag_activesqfscripts", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_activesqfscripts")); return {}; }));
	add(nular("selectnoplayer", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "selectnoplayer")); return {}; }));
	add(nular("getdlcassetsusage", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getdlcassetsusage")); return {}; }));
	add(nular("diag_activesqsscripts", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_activesqsscripts")); return {}; }));
	add(nular("wind", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "wind")); return {}; }));
	add(nular("servername", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "servername")); return {}; }));
	add(nular("freelook", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "freelook")); return {}; }));
	add(nular("humidity", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "humidity")); return {}; }));
	add(nular("hcshownbar", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "hcshownbar")); return {}; }));
	add(nular("visiblegps", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "visiblegps")); return {}; }));
	add(nular("shownuavfeed", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownuavfeed")); return {}; }));
	add(nular("ismultiplayer", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "ismultiplayer")); return {}; }));
	add(nular("isdedicated", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isdedicated")); return {}; }));
	add(nular("alldeadmen", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "alldeadmen")); return {}; }));
	add(nular("diag_fpsmin", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_fpsmin")); return {}; }));
	add(nular("showncuratorcompass", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showncuratorcompass")); return {}; }));
	add(nular("finishmissioninit", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "finishmissioninit")); return {}; }));
	add(nular("fog", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fog")); return {}; }));
	add(nular("buldozer_isenabledroaddiag", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buldozer_isenabledroaddiag")); return {}; }));
	add(nular("userinputdisabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "userinputdisabled")); return {}; }));
	add(nular("loadgame", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "loadgame")); return {}; }));
	add(nular("forcedmap", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "forcedmap")); return {}; }));
	add(nular("cameraview", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cameraview")); return {}; }));
	add(nular("moonintensity", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "moonintensity")); return {}; }));
	add(nular("dynamicsimulationenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dynamicsimulationenabled")); return {}; }));
	add(nular("isserver", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isserver")); return {}; }));
	add(nular("reversedmousey", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "reversedmousey")); return {}; }));
	add(nular("librarydisclaimers", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "librarydisclaimers")); return {}; }));
	add(nular("getremotesensorsdisabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getremotesensorsdisabled")); return {}; }));
	add(nular("tasknull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "tasknull")); return {}; }));
	add(nular("get3dencamera", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3dencamera")); return {}; }));
	add(nular("cadetmode", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cadetmode")); return {}; }));
	add(nular("cameraon", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cameraon")); return {}; }));
	add(nular("allgroups", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allgroups")); return {}; }));
	add(nular("agents", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "agents")); return {}; }));
	add(nular("briefingname", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "briefingname")); return {}; }));
	add(nular("shownscoretable", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownscoretable")); return {}; }));
	add(nular("copyfromclipboard", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "copyfromclipboard")); return {}; }));
	add(nular("cursorobject", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cursorobject")); return {}; }));
	add(nular("teamswitch", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teamswitch")); return {}; }));
	add(nular("diag_activescripts", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "diag_activescripts")); return {}; }));
	add(nular("isstressdamageenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isstressdamageenabled")); return {}; }));
	add(nular("fogparams", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fogparams")); return {}; }));
	add(nular("shownhud", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "shownhud")); return {}; }));
	add(nular("switchableunits", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "switchableunits")); return {}; }));
	add(nular("playerrespawntime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "playerrespawntime")); return {}; }));
	add(nular("initambientlife", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "initambientlife")); return {}; }));
	add(nular("allcutlayers", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "allcutlayers")); return {}; }));
	add(nular("curatormouseover", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatormouseover")); return {}; }));
	add(nular("get3denmouseover", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3denmouseover")); return {}; }));
	add(nular("missionversion", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "missionversion")); return {}; }));
	add(nular("activatedaddons", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "activatedaddons")); return {}; }));
	add(nular("showngps", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "showngps")); return {}; }));
	add(nular("cursortarget", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "cursortarget")); return {}; }));
	add(nular("difficulty", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "difficulty")); return {}; }));
	add(nular("fogforecast", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "fogforecast")); return {}; }));
	add(nular("savejoysticks", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "savejoysticks")); return {}; }));
	add(nular("buldozer_reloadopermap", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "buldozer_reloadopermap")); return {}; }));
	add(nular("getmissionlayers", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmissionlayers")); return {}; }));
	add(nular("is3den", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "is3den")); return {}; }));
	add(nular("dialog", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "dialog")); return {}; }));
	add(nular("systemofunits", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "systemofunits")); return {}; }));
	add(nular("radiovolume", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "radiovolume")); return {}; }));
	add(nular("savingenabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "savingenabled")); return {}; }));
	add(nular("particlesquality", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "particlesquality")); return {}; }));
	add(nular("mapanimcommit", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "mapanimcommit")); return {}; }));
	add(nular("vehicles", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "vehicles")); return {}; }));
	add(nular("curatorselected", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "curatorselected")); return {}; }));
	add(nular("musicvolume", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "musicvolume")); return {}; }));
	add(nular("waves", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "waves")); return {}; }));
	add(nular("disableserialization", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "disableserialization")); return {}; }));
	add(nular("daytime", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "daytime")); return {}; }));
	add(nular("teammembernull", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "teammembernull")); return {}; }));
	add(nular("soundvolume", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "soundvolume")); return {}; }));
	add(nular("alldead", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "alldead")); return {}; }));
	add(nular("getresolution", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getresolution")); return {}; }));
	add(nular("timemultiplier", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "timemultiplier")); return {}; }));
	add(nular("safezonew", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "safezonew")); return {}; }));
	add(nular("getmouseposition", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "getmouseposition")); return {}; }));
	add(nular("get3deniconsvisible", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "get3deniconsvisible")); return {}; }));
	add(nular("isstreamfriendlyuienabled", "", [](virtualmachine* vm) -> value { vm->logmsg(logmessage::runtime::ErrorMessage(*vm->current_instruction(), "NOT IMPLEMENTED", "isstreamfriendlyuienabled")); return {}; }));
}
#endif